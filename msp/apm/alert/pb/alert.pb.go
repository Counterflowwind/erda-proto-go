// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: alert.proto

package pb

import (
	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type QueryAlertRuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TenantGroup string `protobuf:"bytes,1,opt,name=tenantGroup,proto3" json:"tenantGroup,omitempty"`
}

func (x *QueryAlertRuleRequest) Reset() {
	*x = QueryAlertRuleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryAlertRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAlertRuleRequest) ProtoMessage() {}

func (x *QueryAlertRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryAlertRuleRequest.ProtoReflect.Descriptor instead.
func (*QueryAlertRuleRequest) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{0}
}

func (x *QueryAlertRuleRequest) GetTenantGroup() string {
	if x != nil {
		return x.TenantGroup
	}
	return ""
}

type QueryAlertRuleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *AlertTypeRuleResp `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *QueryAlertRuleResponse) Reset() {
	*x = QueryAlertRuleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryAlertRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAlertRuleResponse) ProtoMessage() {}

func (x *QueryAlertRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryAlertRuleResponse.ProtoReflect.Descriptor instead.
func (*QueryAlertRuleResponse) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{1}
}

func (x *QueryAlertRuleResponse) GetData() *AlertTypeRuleResp {
	if x != nil {
		return x.Data
	}
	return nil
}

type AlertTypeRuleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlertTypeRules []*AlertTypeRule `protobuf:"bytes,1,rep,name=alertTypeRules,proto3" json:"alertTypeRules,omitempty"`
	Windows        []int64          `protobuf:"varint,2,rep,packed,name=windows,proto3" json:"windows,omitempty"`
	Operators      []*Operator      `protobuf:"bytes,3,rep,name=operators,proto3" json:"operators,omitempty"`
	Aggregator     []*DisplayKey    `protobuf:"bytes,4,rep,name=aggregator,proto3" json:"aggregator,omitempty"`
	Silence        []*NotifySilence `protobuf:"bytes,5,rep,name=silence,proto3" json:"silence,omitempty"`
}

func (x *AlertTypeRuleResp) Reset() {
	*x = AlertTypeRuleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertTypeRuleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertTypeRuleResp) ProtoMessage() {}

func (x *AlertTypeRuleResp) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertTypeRuleResp.ProtoReflect.Descriptor instead.
func (*AlertTypeRuleResp) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{2}
}

func (x *AlertTypeRuleResp) GetAlertTypeRules() []*AlertTypeRule {
	if x != nil {
		return x.AlertTypeRules
	}
	return nil
}

func (x *AlertTypeRuleResp) GetWindows() []int64 {
	if x != nil {
		return x.Windows
	}
	return nil
}

func (x *AlertTypeRuleResp) GetOperators() []*Operator {
	if x != nil {
		return x.Operators
	}
	return nil
}

func (x *AlertTypeRuleResp) GetAggregator() []*DisplayKey {
	if x != nil {
		return x.Aggregator
	}
	return nil
}

func (x *AlertTypeRuleResp) GetSilence() []*NotifySilence {
	if x != nil {
		return x.Silence
	}
	return nil
}

type DisplayKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key     string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Display string `protobuf:"bytes,2,opt,name=display,proto3" json:"display,omitempty"`
}

func (x *DisplayKey) Reset() {
	*x = DisplayKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisplayKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisplayKey) ProtoMessage() {}

func (x *DisplayKey) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisplayKey.ProtoReflect.Descriptor instead.
func (*DisplayKey) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{3}
}

func (x *DisplayKey) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *DisplayKey) GetDisplay() string {
	if x != nil {
		return x.Display
	}
	return ""
}

type AlertTypeRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlertType *DisplayKey  `protobuf:"bytes,1,opt,name=alertType,proto3" json:"alertType,omitempty"`
	Rules     []*AlertRule `protobuf:"bytes,2,rep,name=rules,proto3" json:"rules,omitempty"`
}

func (x *AlertTypeRule) Reset() {
	*x = AlertTypeRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertTypeRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertTypeRule) ProtoMessage() {}

func (x *AlertTypeRule) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertTypeRule.ProtoReflect.Descriptor instead.
func (*AlertTypeRule) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{4}
}

func (x *AlertTypeRule) GetAlertType() *DisplayKey {
	if x != nil {
		return x.AlertType
	}
	return nil
}

func (x *AlertTypeRule) GetRules() []*AlertRule {
	if x != nil {
		return x.Rules
	}
	return nil
}

type AlertRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name       string                `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	AlertScope string                `protobuf:"bytes,3,opt,name=alertScope,proto3" json:"alertScope,omitempty"`
	AlertType  string                `protobuf:"bytes,4,opt,name=alertType,proto3" json:"alertType,omitempty"`
	AlertIndex *DisplayKey           `protobuf:"bytes,5,opt,name=alertIndex,proto3" json:"alertIndex,omitempty"`
	Template   map[string]*anypb.Any `protobuf:"bytes,6,rep,name=template,proto3" json:"template,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Window     int64                 `protobuf:"varint,7,opt,name=window,proto3" json:"window,omitempty"`
	Functions  []*AlertRuleFunction  `protobuf:"bytes,8,rep,name=functions,proto3" json:"functions,omitempty"`
	IsRecover  bool                  `protobuf:"varint,9,opt,name=isRecover,proto3" json:"isRecover,omitempty"`
	Attributes map[string]*anypb.Any `protobuf:"bytes,10,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Version    string                `protobuf:"bytes,11,opt,name=version,proto3" json:"version,omitempty"`
	Enable     bool                  `protobuf:"varint,12,opt,name=enable,proto3" json:"enable,omitempty"`
	CreateTime int64                 `protobuf:"varint,13,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime int64                 `protobuf:"varint,14,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
}

func (x *AlertRule) Reset() {
	*x = AlertRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertRule) ProtoMessage() {}

func (x *AlertRule) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertRule.ProtoReflect.Descriptor instead.
func (*AlertRule) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{5}
}

func (x *AlertRule) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AlertRule) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AlertRule) GetAlertScope() string {
	if x != nil {
		return x.AlertScope
	}
	return ""
}

func (x *AlertRule) GetAlertType() string {
	if x != nil {
		return x.AlertType
	}
	return ""
}

func (x *AlertRule) GetAlertIndex() *DisplayKey {
	if x != nil {
		return x.AlertIndex
	}
	return nil
}

func (x *AlertRule) GetTemplate() map[string]*anypb.Any {
	if x != nil {
		return x.Template
	}
	return nil
}

func (x *AlertRule) GetWindow() int64 {
	if x != nil {
		return x.Window
	}
	return 0
}

func (x *AlertRule) GetFunctions() []*AlertRuleFunction {
	if x != nil {
		return x.Functions
	}
	return nil
}

func (x *AlertRule) GetIsRecover() bool {
	if x != nil {
		return x.IsRecover
	}
	return false
}

func (x *AlertRule) GetAttributes() map[string]*anypb.Any {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *AlertRule) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *AlertRule) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

func (x *AlertRule) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *AlertRule) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

type AlertRuleFunction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field      *DisplayKey `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	Aggregator string      `protobuf:"bytes,2,opt,name=aggregator,proto3" json:"aggregator,omitempty"`
	Operator   string      `protobuf:"bytes,3,opt,name=operator,proto3" json:"operator,omitempty"`
	Value      *anypb.Any  `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	DataType   string      `protobuf:"bytes,5,opt,name=dataType,proto3" json:"dataType,omitempty"`
	Unit       string      `protobuf:"bytes,6,opt,name=unit,proto3" json:"unit,omitempty"`
}

func (x *AlertRuleFunction) Reset() {
	*x = AlertRuleFunction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertRuleFunction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertRuleFunction) ProtoMessage() {}

func (x *AlertRuleFunction) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertRuleFunction.ProtoReflect.Descriptor instead.
func (*AlertRuleFunction) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{6}
}

func (x *AlertRuleFunction) GetField() *DisplayKey {
	if x != nil {
		return x.Field
	}
	return nil
}

func (x *AlertRuleFunction) GetAggregator() string {
	if x != nil {
		return x.Aggregator
	}
	return ""
}

func (x *AlertRuleFunction) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

func (x *AlertRuleFunction) GetValue() *anypb.Any {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *AlertRuleFunction) GetDataType() string {
	if x != nil {
		return x.DataType
	}
	return ""
}

func (x *AlertRuleFunction) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

type Operator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key     string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Display string `protobuf:"bytes,2,opt,name=display,proto3" json:"display,omitempty"`
	Type    string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *Operator) Reset() {
	*x = Operator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Operator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Operator) ProtoMessage() {}

func (x *Operator) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Operator.ProtoReflect.Descriptor instead.
func (*Operator) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{7}
}

func (x *Operator) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Operator) GetDisplay() string {
	if x != nil {
		return x.Display
	}
	return ""
}

func (x *Operator) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type NotifySilence struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int64       `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	Unit  *DisplayKey `protobuf:"bytes,2,opt,name=unit,proto3" json:"unit,omitempty"`
}

func (x *NotifySilence) Reset() {
	*x = NotifySilence{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifySilence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifySilence) ProtoMessage() {}

func (x *NotifySilence) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifySilence.ProtoReflect.Descriptor instead.
func (*NotifySilence) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{8}
}

func (x *NotifySilence) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *NotifySilence) GetUnit() *DisplayKey {
	if x != nil {
		return x.Unit
	}
	return nil
}

type QueryAlertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TenantGroup string `protobuf:"bytes,1,opt,name=tenantGroup,proto3" json:"tenantGroup,omitempty"`
	PageNo      int64  `protobuf:"varint,2,opt,name=pageNo,proto3" json:"pageNo,omitempty"`
	PageSize    int64  `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *QueryAlertRequest) Reset() {
	*x = QueryAlertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryAlertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAlertRequest) ProtoMessage() {}

func (x *QueryAlertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryAlertRequest.ProtoReflect.Descriptor instead.
func (*QueryAlertRequest) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{9}
}

func (x *QueryAlertRequest) GetTenantGroup() string {
	if x != nil {
		return x.TenantGroup
	}
	return ""
}

func (x *QueryAlertRequest) GetPageNo() int64 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *QueryAlertRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type QueryAlertResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *QueryAlertData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *QueryAlertResponse) Reset() {
	*x = QueryAlertResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryAlertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAlertResponse) ProtoMessage() {}

func (x *QueryAlertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryAlertResponse.ProtoReflect.Descriptor instead.
func (*QueryAlertResponse) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{10}
}

func (x *QueryAlertResponse) GetData() *QueryAlertData {
	if x != nil {
		return x.Data
	}
	return nil
}

type QueryAlertData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*Alert `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int64    `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *QueryAlertData) Reset() {
	*x = QueryAlertData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryAlertData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAlertData) ProtoMessage() {}

func (x *QueryAlertData) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryAlertData.ProtoReflect.Descriptor instead.
func (*QueryAlertData) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{11}
}

func (x *QueryAlertData) GetList() []*Alert {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *QueryAlertData) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type Alert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           uint64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         string                `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	AlertScope   string                `protobuf:"bytes,3,opt,name=alertScope,proto3" json:"alertScope,omitempty"`
	AlertScopeId string                `protobuf:"bytes,4,opt,name=alertScopeId,proto3" json:"alertScopeId,omitempty"`
	Enable       bool                  `protobuf:"varint,5,opt,name=enable,proto3" json:"enable,omitempty"`
	Rules        []*AlertExpression    `protobuf:"bytes,6,rep,name=rules,proto3" json:"rules,omitempty"`
	Notifies     []*AlertNotify        `protobuf:"bytes,7,rep,name=notifies,proto3" json:"notifies,omitempty"`
	Filters      map[string]*anypb.Any `protobuf:"bytes,8,rep,name=filters,proto3" json:"filters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Attributes   map[string]*anypb.Any `protobuf:"bytes,9,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ClusterNames []string              `protobuf:"bytes,10,rep,name=clusterNames,proto3" json:"clusterNames,omitempty"`
	Domain       string                `protobuf:"bytes,11,opt,name=domain,proto3" json:"domain,omitempty"`
	CreateTime   int64                 `protobuf:"varint,12,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime   int64                 `protobuf:"varint,13,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
}

func (x *Alert) Reset() {
	*x = Alert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Alert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Alert) ProtoMessage() {}

func (x *Alert) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Alert.ProtoReflect.Descriptor instead.
func (*Alert) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{12}
}

func (x *Alert) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Alert) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Alert) GetAlertScope() string {
	if x != nil {
		return x.AlertScope
	}
	return ""
}

func (x *Alert) GetAlertScopeId() string {
	if x != nil {
		return x.AlertScopeId
	}
	return ""
}

func (x *Alert) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

func (x *Alert) GetRules() []*AlertExpression {
	if x != nil {
		return x.Rules
	}
	return nil
}

func (x *Alert) GetNotifies() []*AlertNotify {
	if x != nil {
		return x.Notifies
	}
	return nil
}

func (x *Alert) GetFilters() map[string]*anypb.Any {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *Alert) GetAttributes() map[string]*anypb.Any {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *Alert) GetClusterNames() []string {
	if x != nil {
		return x.ClusterNames
	}
	return nil
}

func (x *Alert) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *Alert) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *Alert) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

type AlertExpression struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint64                                     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	RuleId     uint64                                     `protobuf:"varint,2,opt,name=ruleId,proto3" json:"ruleId,omitempty"`
	AlertIndex string                                     `protobuf:"bytes,3,opt,name=alertIndex,proto3" json:"alertIndex,omitempty"`
	Window     int64                                      `protobuf:"varint,4,opt,name=window,proto3" json:"window,omitempty"`
	Functions  []*AlertExpression_AlertExpressionFunction `protobuf:"bytes,5,rep,name=functions,proto3" json:"functions,omitempty"`
	IsRecover  bool                                       `protobuf:"varint,6,opt,name=isRecover,proto3" json:"isRecover,omitempty"`
	CreateTime int64                                      `protobuf:"varint,7,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime int64                                      `protobuf:"varint,8,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
}

func (x *AlertExpression) Reset() {
	*x = AlertExpression{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertExpression) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertExpression) ProtoMessage() {}

func (x *AlertExpression) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertExpression.ProtoReflect.Descriptor instead.
func (*AlertExpression) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{13}
}

func (x *AlertExpression) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AlertExpression) GetRuleId() uint64 {
	if x != nil {
		return x.RuleId
	}
	return 0
}

func (x *AlertExpression) GetAlertIndex() string {
	if x != nil {
		return x.AlertIndex
	}
	return ""
}

func (x *AlertExpression) GetWindow() int64 {
	if x != nil {
		return x.Window
	}
	return 0
}

func (x *AlertExpression) GetFunctions() []*AlertExpression_AlertExpressionFunction {
	if x != nil {
		return x.Functions
	}
	return nil
}

func (x *AlertExpression) GetIsRecover() bool {
	if x != nil {
		return x.IsRecover
	}
	return false
}

func (x *AlertExpression) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *AlertExpression) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

type AlertNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Type        string              `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	GroupId     int64               `protobuf:"varint,3,opt,name=groupId,proto3" json:"groupId,omitempty"`
	GroupType   string              `protobuf:"bytes,4,opt,name=groupType,proto3" json:"groupType,omitempty"`
	NotifyGroup *NotifyGroup        `protobuf:"bytes,5,opt,name=notifyGroup,proto3" json:"notifyGroup,omitempty"`
	DingdingUrl string              `protobuf:"bytes,6,opt,name=dingdingUrl,proto3" json:"dingdingUrl,omitempty"`
	Silence     *AlertNotifySilence `protobuf:"bytes,7,opt,name=silence,proto3" json:"silence,omitempty"`
	CreateTime  int64               `protobuf:"varint,8,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime  int64               `protobuf:"varint,9,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
}

func (x *AlertNotify) Reset() {
	*x = AlertNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertNotify) ProtoMessage() {}

func (x *AlertNotify) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertNotify.ProtoReflect.Descriptor instead.
func (*AlertNotify) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{14}
}

func (x *AlertNotify) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AlertNotify) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *AlertNotify) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *AlertNotify) GetGroupType() string {
	if x != nil {
		return x.GroupType
	}
	return ""
}

func (x *AlertNotify) GetNotifyGroup() *NotifyGroup {
	if x != nil {
		return x.NotifyGroup
	}
	return nil
}

func (x *AlertNotify) GetDingdingUrl() string {
	if x != nil {
		return x.DingdingUrl
	}
	return ""
}

func (x *AlertNotify) GetSilence() *AlertNotifySilence {
	if x != nil {
		return x.Silence
	}
	return nil
}

func (x *AlertNotify) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *AlertNotify) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

type NotifyGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ScopeType string                 `protobuf:"bytes,3,opt,name=scopeType,proto3" json:"scopeType,omitempty"`
	ScopeId   string                 `protobuf:"bytes,4,opt,name=scopeId,proto3" json:"scopeId,omitempty"`
	Targets   []*NotifyTarget        `protobuf:"bytes,5,rep,name=targets,proto3" json:"targets,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	Creator   string                 `protobuf:"bytes,7,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (x *NotifyGroup) Reset() {
	*x = NotifyGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyGroup) ProtoMessage() {}

func (x *NotifyGroup) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyGroup.ProtoReflect.Descriptor instead.
func (*NotifyGroup) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{15}
}

func (x *NotifyGroup) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NotifyGroup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NotifyGroup) GetScopeType() string {
	if x != nil {
		return x.ScopeType
	}
	return ""
}

func (x *NotifyGroup) GetScopeId() string {
	if x != nil {
		return x.ScopeId
	}
	return ""
}

func (x *NotifyGroup) GetTargets() []*NotifyTarget {
	if x != nil {
		return x.Targets
	}
	return nil
}

func (x *NotifyGroup) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *NotifyGroup) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

type NotifyTarget struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   string    `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Values []*Target `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *NotifyTarget) Reset() {
	*x = NotifyTarget{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyTarget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyTarget) ProtoMessage() {}

func (x *NotifyTarget) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyTarget.ProtoReflect.Descriptor instead.
func (*NotifyTarget) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{16}
}

func (x *NotifyTarget) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *NotifyTarget) GetValues() []*Target {
	if x != nil {
		return x.Values
	}
	return nil
}

type Target struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Receiver string `protobuf:"bytes,1,opt,name=receiver,proto3" json:"receiver,omitempty"`
	Secret   string `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (x *Target) Reset() {
	*x = Target{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Target) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target) ProtoMessage() {}

func (x *Target) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target.ProtoReflect.Descriptor instead.
func (*Target) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{17}
}

func (x *Target) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

func (x *Target) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

type AlertNotifySilence struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value  int64  `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	Unit   string `protobuf:"bytes,2,opt,name=unit,proto3" json:"unit,omitempty"`
	Policy string `protobuf:"bytes,3,opt,name=policy,proto3" json:"policy,omitempty"`
}

func (x *AlertNotifySilence) Reset() {
	*x = AlertNotifySilence{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertNotifySilence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertNotifySilence) ProtoMessage() {}

func (x *AlertNotifySilence) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertNotifySilence.ProtoReflect.Descriptor instead.
func (*AlertNotifySilence) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{18}
}

func (x *AlertNotifySilence) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *AlertNotifySilence) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *AlertNotifySilence) GetPolicy() string {
	if x != nil {
		return x.Policy
	}
	return ""
}

type GetAlertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TenantGroup string `protobuf:"bytes,1,opt,name=tenantGroup,proto3" json:"tenantGroup,omitempty"`
	Id          int64  `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetAlertRequest) Reset() {
	*x = GetAlertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAlertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlertRequest) ProtoMessage() {}

func (x *GetAlertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlertRequest.ProtoReflect.Descriptor instead.
func (*GetAlertRequest) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{19}
}

func (x *GetAlertRequest) GetTenantGroup() string {
	if x != nil {
		return x.TenantGroup
	}
	return ""
}

func (x *GetAlertRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetAlertResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *Alert `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetAlertResponse) Reset() {
	*x = GetAlertResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAlertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlertResponse) ProtoMessage() {}

func (x *GetAlertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlertResponse.ProtoReflect.Descriptor instead.
func (*GetAlertResponse) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{20}
}

func (x *GetAlertResponse) GetData() *Alert {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateAlertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TenantGroup string             `protobuf:"bytes,1,opt,name=tenantGroup,proto3" json:"tenantGroup,omitempty"`
	Name        string             `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	AppIds      []string           `protobuf:"bytes,3,rep,name=appIds,proto3" json:"appIds,omitempty"`
	Rules       []*AlertExpression `protobuf:"bytes,4,rep,name=rules,proto3" json:"rules,omitempty"`
	Notifies    []*AlertNotify     `protobuf:"bytes,5,rep,name=notifies,proto3" json:"notifies,omitempty"`
	Domain      string             `protobuf:"bytes,6,opt,name=domain,proto3" json:"domain,omitempty"`
	CreateTime  int64              `protobuf:"varint,7,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime  int64              `protobuf:"varint,8,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
}

func (x *CreateAlertRequest) Reset() {
	*x = CreateAlertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAlertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAlertRequest) ProtoMessage() {}

func (x *CreateAlertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAlertRequest.ProtoReflect.Descriptor instead.
func (*CreateAlertRequest) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{21}
}

func (x *CreateAlertRequest) GetTenantGroup() string {
	if x != nil {
		return x.TenantGroup
	}
	return ""
}

func (x *CreateAlertRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateAlertRequest) GetAppIds() []string {
	if x != nil {
		return x.AppIds
	}
	return nil
}

func (x *CreateAlertRequest) GetRules() []*AlertExpression {
	if x != nil {
		return x.Rules
	}
	return nil
}

func (x *CreateAlertRequest) GetNotifies() []*AlertNotify {
	if x != nil {
		return x.Notifies
	}
	return nil
}

func (x *CreateAlertRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *CreateAlertRequest) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *CreateAlertRequest) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

type CreateAlertResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *CreateAlertData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateAlertResponse) Reset() {
	*x = CreateAlertResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAlertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAlertResponse) ProtoMessage() {}

func (x *CreateAlertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAlertResponse.ProtoReflect.Descriptor instead.
func (*CreateAlertResponse) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{22}
}

func (x *CreateAlertResponse) GetData() *CreateAlertData {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateAlertData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateAlertData) Reset() {
	*x = CreateAlertData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAlertData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAlertData) ProtoMessage() {}

func (x *CreateAlertData) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAlertData.ProtoReflect.Descriptor instead.
func (*CreateAlertData) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{23}
}

func (x *CreateAlertData) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdateAlertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TenantGroup string             `protobuf:"bytes,2,opt,name=tenantGroup,proto3" json:"tenantGroup,omitempty"`
	Name        string             `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	AppIds      []string           `protobuf:"bytes,4,rep,name=appIds,proto3" json:"appIds,omitempty"`
	Enable      bool               `protobuf:"varint,5,opt,name=enable,proto3" json:"enable,omitempty"`
	Rules       []*AlertExpression `protobuf:"bytes,6,rep,name=rules,proto3" json:"rules,omitempty"`
	Notifies    []*AlertNotify     `protobuf:"bytes,7,rep,name=notifies,proto3" json:"notifies,omitempty"`
	Domain      string             `protobuf:"bytes,8,opt,name=domain,proto3" json:"domain,omitempty"`
	CreateTime  int64              `protobuf:"varint,9,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime  int64              `protobuf:"varint,10,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
}

func (x *UpdateAlertRequest) Reset() {
	*x = UpdateAlertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAlertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAlertRequest) ProtoMessage() {}

func (x *UpdateAlertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAlertRequest.ProtoReflect.Descriptor instead.
func (*UpdateAlertRequest) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{24}
}

func (x *UpdateAlertRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateAlertRequest) GetTenantGroup() string {
	if x != nil {
		return x.TenantGroup
	}
	return ""
}

func (x *UpdateAlertRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateAlertRequest) GetAppIds() []string {
	if x != nil {
		return x.AppIds
	}
	return nil
}

func (x *UpdateAlertRequest) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

func (x *UpdateAlertRequest) GetRules() []*AlertExpression {
	if x != nil {
		return x.Rules
	}
	return nil
}

func (x *UpdateAlertRequest) GetNotifies() []*AlertNotify {
	if x != nil {
		return x.Notifies
	}
	return nil
}

func (x *UpdateAlertRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *UpdateAlertRequest) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *UpdateAlertRequest) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

type UpdateAlertResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateAlertResponse) Reset() {
	*x = UpdateAlertResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAlertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAlertResponse) ProtoMessage() {}

func (x *UpdateAlertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAlertResponse.ProtoReflect.Descriptor instead.
func (*UpdateAlertResponse) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{25}
}

type UpdateAlertEnableRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TenantGroup string `protobuf:"bytes,2,opt,name=tenantGroup,proto3" json:"tenantGroup,omitempty"`
	Enable      bool   `protobuf:"varint,3,opt,name=enable,proto3" json:"enable,omitempty"`
}

func (x *UpdateAlertEnableRequest) Reset() {
	*x = UpdateAlertEnableRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAlertEnableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAlertEnableRequest) ProtoMessage() {}

func (x *UpdateAlertEnableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAlertEnableRequest.ProtoReflect.Descriptor instead.
func (*UpdateAlertEnableRequest) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{26}
}

func (x *UpdateAlertEnableRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateAlertEnableRequest) GetTenantGroup() string {
	if x != nil {
		return x.TenantGroup
	}
	return ""
}

func (x *UpdateAlertEnableRequest) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

type UpdateAlertEnableResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateAlertEnableResponse) Reset() {
	*x = UpdateAlertEnableResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAlertEnableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAlertEnableResponse) ProtoMessage() {}

func (x *UpdateAlertEnableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAlertEnableResponse.ProtoReflect.Descriptor instead.
func (*UpdateAlertEnableResponse) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{27}
}

type DeleteAlertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TenantGroup string `protobuf:"bytes,2,opt,name=tenantGroup,proto3" json:"tenantGroup,omitempty"`
}

func (x *DeleteAlertRequest) Reset() {
	*x = DeleteAlertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAlertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAlertRequest) ProtoMessage() {}

func (x *DeleteAlertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAlertRequest.ProtoReflect.Descriptor instead.
func (*DeleteAlertRequest) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{28}
}

func (x *DeleteAlertRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeleteAlertRequest) GetTenantGroup() string {
	if x != nil {
		return x.TenantGroup
	}
	return ""
}

type DeleteAlertResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteAlertResponse) Reset() {
	*x = DeleteAlertResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAlertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAlertResponse) ProtoMessage() {}

func (x *DeleteAlertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAlertResponse.ProtoReflect.Descriptor instead.
func (*DeleteAlertResponse) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{29}
}

type QueryCustomizeMetricRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TenantGroup string `protobuf:"bytes,1,opt,name=tenantGroup,proto3" json:"tenantGroup,omitempty"`
}

func (x *QueryCustomizeMetricRequest) Reset() {
	*x = QueryCustomizeMetricRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCustomizeMetricRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCustomizeMetricRequest) ProtoMessage() {}

func (x *QueryCustomizeMetricRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCustomizeMetricRequest.ProtoReflect.Descriptor instead.
func (*QueryCustomizeMetricRequest) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{30}
}

func (x *QueryCustomizeMetricRequest) GetTenantGroup() string {
	if x != nil {
		return x.TenantGroup
	}
	return ""
}

type QueryCustomizeMetricResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *CustomizeMetricData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *QueryCustomizeMetricResponse) Reset() {
	*x = QueryCustomizeMetricResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCustomizeMetricResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCustomizeMetricResponse) ProtoMessage() {}

func (x *QueryCustomizeMetricResponse) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCustomizeMetricResponse.ProtoReflect.Descriptor instead.
func (*QueryCustomizeMetricResponse) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{31}
}

func (x *QueryCustomizeMetricResponse) GetData() *CustomizeMetricData {
	if x != nil {
		return x.Data
	}
	return nil
}

type CustomizeMetricData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metrics           []*MetricMeta `protobuf:"bytes,1,rep,name=metrics,proto3" json:"metrics,omitempty"`
	FunctionOperators []*Operator   `protobuf:"bytes,2,rep,name=functionOperators,proto3" json:"functionOperators,omitempty"`
	FilterOperators   []*Operator   `protobuf:"bytes,3,rep,name=filterOperators,proto3" json:"filterOperators,omitempty"`
	Aggregator        []*DisplayKey `protobuf:"bytes,4,rep,name=aggregator,proto3" json:"aggregator,omitempty"`
	NotifySample      string        `protobuf:"bytes,5,opt,name=notifySample,proto3" json:"notifySample,omitempty"`
}

func (x *CustomizeMetricData) Reset() {
	*x = CustomizeMetricData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomizeMetricData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomizeMetricData) ProtoMessage() {}

func (x *CustomizeMetricData) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomizeMetricData.ProtoReflect.Descriptor instead.
func (*CustomizeMetricData) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{32}
}

func (x *CustomizeMetricData) GetMetrics() []*MetricMeta {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *CustomizeMetricData) GetFunctionOperators() []*Operator {
	if x != nil {
		return x.FunctionOperators
	}
	return nil
}

func (x *CustomizeMetricData) GetFilterOperators() []*Operator {
	if x != nil {
		return x.FilterOperators
	}
	return nil
}

func (x *CustomizeMetricData) GetAggregator() []*DisplayKey {
	if x != nil {
		return x.Aggregator
	}
	return nil
}

func (x *CustomizeMetricData) GetNotifySample() string {
	if x != nil {
		return x.NotifySample
	}
	return ""
}

type MetricMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   *DisplayKey  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Fields []*FieldMeta `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty"`
	Tags   []*TagMeta   `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *MetricMeta) Reset() {
	*x = MetricMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetricMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricMeta) ProtoMessage() {}

func (x *MetricMeta) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricMeta.ProtoReflect.Descriptor instead.
func (*MetricMeta) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{33}
}

func (x *MetricMeta) GetName() *DisplayKey {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *MetricMeta) GetFields() []*FieldMeta {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *MetricMeta) GetTags() []*TagMeta {
	if x != nil {
		return x.Tags
	}
	return nil
}

type FieldMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field    *DisplayKey `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	DataType string      `protobuf:"bytes,2,opt,name=dataType,proto3" json:"dataType,omitempty"`
}

func (x *FieldMeta) Reset() {
	*x = FieldMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldMeta) ProtoMessage() {}

func (x *FieldMeta) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldMeta.ProtoReflect.Descriptor instead.
func (*FieldMeta) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{34}
}

func (x *FieldMeta) GetField() *DisplayKey {
	if x != nil {
		return x.Field
	}
	return nil
}

func (x *FieldMeta) GetDataType() string {
	if x != nil {
		return x.DataType
	}
	return ""
}

type TagMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag      *DisplayKey `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
	DataType string      `protobuf:"bytes,2,opt,name=dataType,proto3" json:"dataType,omitempty"`
}

func (x *TagMeta) Reset() {
	*x = TagMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TagMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagMeta) ProtoMessage() {}

func (x *TagMeta) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagMeta.ProtoReflect.Descriptor instead.
func (*TagMeta) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{35}
}

func (x *TagMeta) GetTag() *DisplayKey {
	if x != nil {
		return x.Tag
	}
	return nil
}

func (x *TagMeta) GetDataType() string {
	if x != nil {
		return x.DataType
	}
	return ""
}

type QueryCustomizeNotifyTargetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TenantGroup string `protobuf:"bytes,1,opt,name=tenantGroup,proto3" json:"tenantGroup,omitempty"`
}

func (x *QueryCustomizeNotifyTargetRequest) Reset() {
	*x = QueryCustomizeNotifyTargetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCustomizeNotifyTargetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCustomizeNotifyTargetRequest) ProtoMessage() {}

func (x *QueryCustomizeNotifyTargetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCustomizeNotifyTargetRequest.ProtoReflect.Descriptor instead.
func (*QueryCustomizeNotifyTargetRequest) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{36}
}

func (x *QueryCustomizeNotifyTargetRequest) GetTenantGroup() string {
	if x != nil {
		return x.TenantGroup
	}
	return ""
}

type QueryCustomizeNotifyTargetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *QueryCustomizeNotifyTargetData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *QueryCustomizeNotifyTargetResponse) Reset() {
	*x = QueryCustomizeNotifyTargetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCustomizeNotifyTargetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCustomizeNotifyTargetResponse) ProtoMessage() {}

func (x *QueryCustomizeNotifyTargetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCustomizeNotifyTargetResponse.ProtoReflect.Descriptor instead.
func (*QueryCustomizeNotifyTargetResponse) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{37}
}

func (x *QueryCustomizeNotifyTargetResponse) GetData() *QueryCustomizeNotifyTargetData {
	if x != nil {
		return x.Data
	}
	return nil
}

type QueryCustomizeNotifyTargetData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Targets []*DisplayKey `protobuf:"bytes,1,rep,name=targets,proto3" json:"targets,omitempty"`
}

func (x *QueryCustomizeNotifyTargetData) Reset() {
	*x = QueryCustomizeNotifyTargetData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCustomizeNotifyTargetData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCustomizeNotifyTargetData) ProtoMessage() {}

func (x *QueryCustomizeNotifyTargetData) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCustomizeNotifyTargetData.ProtoReflect.Descriptor instead.
func (*QueryCustomizeNotifyTargetData) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{38}
}

func (x *QueryCustomizeNotifyTargetData) GetTargets() []*DisplayKey {
	if x != nil {
		return x.Targets
	}
	return nil
}

type QueryCustomizeAlertsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TenantGroup string `protobuf:"bytes,1,opt,name=tenantGroup,proto3" json:"tenantGroup,omitempty"`
	PageNo      int64  `protobuf:"varint,2,opt,name=pageNo,proto3" json:"pageNo,omitempty"`
	PageSize    int64  `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *QueryCustomizeAlertsRequest) Reset() {
	*x = QueryCustomizeAlertsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCustomizeAlertsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCustomizeAlertsRequest) ProtoMessage() {}

func (x *QueryCustomizeAlertsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCustomizeAlertsRequest.ProtoReflect.Descriptor instead.
func (*QueryCustomizeAlertsRequest) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{39}
}

func (x *QueryCustomizeAlertsRequest) GetTenantGroup() string {
	if x != nil {
		return x.TenantGroup
	}
	return ""
}

func (x *QueryCustomizeAlertsRequest) GetPageNo() int64 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *QueryCustomizeAlertsRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type QueryCustomizeAlertsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *QueryCustomizeAlertsData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *QueryCustomizeAlertsResponse) Reset() {
	*x = QueryCustomizeAlertsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCustomizeAlertsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCustomizeAlertsResponse) ProtoMessage() {}

func (x *QueryCustomizeAlertsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCustomizeAlertsResponse.ProtoReflect.Descriptor instead.
func (*QueryCustomizeAlertsResponse) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{40}
}

func (x *QueryCustomizeAlertsResponse) GetData() *QueryCustomizeAlertsData {
	if x != nil {
		return x.Data
	}
	return nil
}

type QueryCustomizeAlertsData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                     `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*CustomizeAlertOverview `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryCustomizeAlertsData) Reset() {
	*x = QueryCustomizeAlertsData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCustomizeAlertsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCustomizeAlertsData) ProtoMessage() {}

func (x *QueryCustomizeAlertsData) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCustomizeAlertsData.ProtoReflect.Descriptor instead.
func (*QueryCustomizeAlertsData) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{41}
}

func (x *QueryCustomizeAlertsData) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryCustomizeAlertsData) GetList() []*CustomizeAlertOverview {
	if x != nil {
		return x.List
	}
	return nil
}

type CustomizeAlertOverview struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Metric        string   `protobuf:"bytes,3,opt,name=metric,proto3" json:"metric,omitempty"`
	Window        uint64   `protobuf:"varint,4,opt,name=window,proto3" json:"window,omitempty"`
	NotifyTargets []string `protobuf:"bytes,5,rep,name=notifyTargets,proto3" json:"notifyTargets,omitempty"`
	DashboardId   string   `protobuf:"bytes,6,opt,name=dashboardId,proto3" json:"dashboardId,omitempty"`
	Enable        bool     `protobuf:"varint,7,opt,name=enable,proto3" json:"enable,omitempty"`
	CreateTime    int64    `protobuf:"varint,8,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime    int64    `protobuf:"varint,9,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
}

func (x *CustomizeAlertOverview) Reset() {
	*x = CustomizeAlertOverview{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomizeAlertOverview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomizeAlertOverview) ProtoMessage() {}

func (x *CustomizeAlertOverview) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomizeAlertOverview.ProtoReflect.Descriptor instead.
func (*CustomizeAlertOverview) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{42}
}

func (x *CustomizeAlertOverview) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CustomizeAlertOverview) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CustomizeAlertOverview) GetMetric() string {
	if x != nil {
		return x.Metric
	}
	return ""
}

func (x *CustomizeAlertOverview) GetWindow() uint64 {
	if x != nil {
		return x.Window
	}
	return 0
}

func (x *CustomizeAlertOverview) GetNotifyTargets() []string {
	if x != nil {
		return x.NotifyTargets
	}
	return nil
}

func (x *CustomizeAlertOverview) GetDashboardId() string {
	if x != nil {
		return x.DashboardId
	}
	return ""
}

func (x *CustomizeAlertOverview) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

func (x *CustomizeAlertOverview) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *CustomizeAlertOverview) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

type GetCustomizeAlertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TenantGroup string `protobuf:"bytes,2,opt,name=tenantGroup,proto3" json:"tenantGroup,omitempty"`
}

func (x *GetCustomizeAlertRequest) Reset() {
	*x = GetCustomizeAlertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCustomizeAlertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCustomizeAlertRequest) ProtoMessage() {}

func (x *GetCustomizeAlertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCustomizeAlertRequest.ProtoReflect.Descriptor instead.
func (*GetCustomizeAlertRequest) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{43}
}

func (x *GetCustomizeAlertRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetCustomizeAlertRequest) GetTenantGroup() string {
	if x != nil {
		return x.TenantGroup
	}
	return ""
}

type GetCustomizeAlertResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *CustomizeAlertDetail `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetCustomizeAlertResponse) Reset() {
	*x = GetCustomizeAlertResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCustomizeAlertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCustomizeAlertResponse) ProtoMessage() {}

func (x *GetCustomizeAlertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCustomizeAlertResponse.ProtoReflect.Descriptor instead.
func (*GetCustomizeAlertResponse) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{44}
}

func (x *GetCustomizeAlertResponse) GetData() *CustomizeAlertDetail {
	if x != nil {
		return x.Data
	}
	return nil
}

type CustomizeAlertDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           uint64                           `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ClusterName  string                           `protobuf:"bytes,2,opt,name=clusterName,proto3" json:"clusterName,omitempty"`
	Name         string                           `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	AlertType    string                           `protobuf:"bytes,4,opt,name=alertType,proto3" json:"alertType,omitempty"`
	AlertScope   string                           `protobuf:"bytes,5,opt,name=alertScope,proto3" json:"alertScope,omitempty"`
	AlertScopeId string                           `protobuf:"bytes,6,opt,name=alertScopeId,proto3" json:"alertScopeId,omitempty"`
	Enable       bool                             `protobuf:"varint,7,opt,name=enable,proto3" json:"enable,omitempty"`
	Attributes   map[string]*anypb.Any            `protobuf:"bytes,8,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Rules        []*CustomizeAlertRule            `protobuf:"bytes,9,rep,name=rules,proto3" json:"rules,omitempty"`
	Notifies     []*CustomizeAlertNotifyTemplates `protobuf:"bytes,10,rep,name=notifies,proto3" json:"notifies,omitempty"`
	CreateTime   int64                            `protobuf:"varint,11,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime   int64                            `protobuf:"varint,12,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	Lang         []*LanguageCode                  `protobuf:"bytes,13,rep,name=lang,proto3" json:"lang,omitempty"`
}

func (x *CustomizeAlertDetail) Reset() {
	*x = CustomizeAlertDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomizeAlertDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomizeAlertDetail) ProtoMessage() {}

func (x *CustomizeAlertDetail) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomizeAlertDetail.ProtoReflect.Descriptor instead.
func (*CustomizeAlertDetail) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{45}
}

func (x *CustomizeAlertDetail) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CustomizeAlertDetail) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *CustomizeAlertDetail) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CustomizeAlertDetail) GetAlertType() string {
	if x != nil {
		return x.AlertType
	}
	return ""
}

func (x *CustomizeAlertDetail) GetAlertScope() string {
	if x != nil {
		return x.AlertScope
	}
	return ""
}

func (x *CustomizeAlertDetail) GetAlertScopeId() string {
	if x != nil {
		return x.AlertScopeId
	}
	return ""
}

func (x *CustomizeAlertDetail) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

func (x *CustomizeAlertDetail) GetAttributes() map[string]*anypb.Any {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *CustomizeAlertDetail) GetRules() []*CustomizeAlertRule {
	if x != nil {
		return x.Rules
	}
	return nil
}

func (x *CustomizeAlertDetail) GetNotifies() []*CustomizeAlertNotifyTemplates {
	if x != nil {
		return x.Notifies
	}
	return nil
}

func (x *CustomizeAlertDetail) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *CustomizeAlertDetail) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *CustomizeAlertDetail) GetLang() []*LanguageCode {
	if x != nil {
		return x.Lang
	}
	return nil
}

type CustomizeAlertRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  uint64                        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                string                        `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Metric              string                        `protobuf:"bytes,3,opt,name=metric,proto3" json:"metric,omitempty"`
	Window              uint64                        `protobuf:"varint,4,opt,name=window,proto3" json:"window,omitempty"`
	Functions           []*CustomizeAlertRuleFunction `protobuf:"bytes,5,rep,name=functions,proto3" json:"functions,omitempty"`
	Filters             []*CustomizeAlertRuleFilter   `protobuf:"bytes,6,rep,name=filters,proto3" json:"filters,omitempty"`
	Group               []string                      `protobuf:"bytes,7,rep,name=group,proto3" json:"group,omitempty"`
	Outputs             []string                      `protobuf:"bytes,8,rep,name=outputs,proto3" json:"outputs,omitempty"`
	Select              map[string]string             `protobuf:"bytes,9,rep,name=select,proto3" json:"select,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Attributes          map[string]*anypb.Any         `protobuf:"bytes,10,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ActivedMetricGroups []string                      `protobuf:"bytes,11,rep,name=activedMetricGroups,proto3" json:"activedMetricGroups,omitempty"`
	CreateTime          int64                         `protobuf:"varint,12,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime          int64                         `protobuf:"varint,13,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
}

func (x *CustomizeAlertRule) Reset() {
	*x = CustomizeAlertRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomizeAlertRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomizeAlertRule) ProtoMessage() {}

func (x *CustomizeAlertRule) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomizeAlertRule.ProtoReflect.Descriptor instead.
func (*CustomizeAlertRule) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{46}
}

func (x *CustomizeAlertRule) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CustomizeAlertRule) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CustomizeAlertRule) GetMetric() string {
	if x != nil {
		return x.Metric
	}
	return ""
}

func (x *CustomizeAlertRule) GetWindow() uint64 {
	if x != nil {
		return x.Window
	}
	return 0
}

func (x *CustomizeAlertRule) GetFunctions() []*CustomizeAlertRuleFunction {
	if x != nil {
		return x.Functions
	}
	return nil
}

func (x *CustomizeAlertRule) GetFilters() []*CustomizeAlertRuleFilter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *CustomizeAlertRule) GetGroup() []string {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *CustomizeAlertRule) GetOutputs() []string {
	if x != nil {
		return x.Outputs
	}
	return nil
}

func (x *CustomizeAlertRule) GetSelect() map[string]string {
	if x != nil {
		return x.Select
	}
	return nil
}

func (x *CustomizeAlertRule) GetAttributes() map[string]*anypb.Any {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *CustomizeAlertRule) GetActivedMetricGroups() []string {
	if x != nil {
		return x.ActivedMetricGroups
	}
	return nil
}

func (x *CustomizeAlertRule) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *CustomizeAlertRule) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

type CustomizeAlertRuleFunction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field      string     `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	Alias      string     `protobuf:"bytes,2,opt,name=alias,proto3" json:"alias,omitempty"`
	Aggregator string     `protobuf:"bytes,3,opt,name=aggregator,proto3" json:"aggregator,omitempty"`
	Operator   string     `protobuf:"bytes,4,opt,name=operator,proto3" json:"operator,omitempty"`
	Value      *anypb.Any `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	DataType   string     `protobuf:"bytes,6,opt,name=dataType,proto3" json:"dataType,omitempty"`
	Unit       string     `protobuf:"bytes,7,opt,name=unit,proto3" json:"unit,omitempty"`
}

func (x *CustomizeAlertRuleFunction) Reset() {
	*x = CustomizeAlertRuleFunction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomizeAlertRuleFunction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomizeAlertRuleFunction) ProtoMessage() {}

func (x *CustomizeAlertRuleFunction) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomizeAlertRuleFunction.ProtoReflect.Descriptor instead.
func (*CustomizeAlertRuleFunction) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{47}
}

func (x *CustomizeAlertRuleFunction) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *CustomizeAlertRuleFunction) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *CustomizeAlertRuleFunction) GetAggregator() string {
	if x != nil {
		return x.Aggregator
	}
	return ""
}

func (x *CustomizeAlertRuleFunction) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

func (x *CustomizeAlertRuleFunction) GetValue() *anypb.Any {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *CustomizeAlertRuleFunction) GetDataType() string {
	if x != nil {
		return x.DataType
	}
	return ""
}

func (x *CustomizeAlertRuleFunction) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

type CustomizeAlertRuleFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag      string     `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
	Operator string     `protobuf:"bytes,2,opt,name=operator,proto3" json:"operator,omitempty"`
	Value    *anypb.Any `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	DataType string     `protobuf:"bytes,4,opt,name=dataType,proto3" json:"dataType,omitempty"`
}

func (x *CustomizeAlertRuleFilter) Reset() {
	*x = CustomizeAlertRuleFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomizeAlertRuleFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomizeAlertRuleFilter) ProtoMessage() {}

func (x *CustomizeAlertRuleFilter) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomizeAlertRuleFilter.ProtoReflect.Descriptor instead.
func (*CustomizeAlertRuleFilter) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{48}
}

func (x *CustomizeAlertRuleFilter) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *CustomizeAlertRuleFilter) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

func (x *CustomizeAlertRuleFilter) GetValue() *anypb.Any {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *CustomizeAlertRuleFilter) GetDataType() string {
	if x != nil {
		return x.DataType
	}
	return ""
}

type CustomizeAlertNotifyTemplates struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name       string                `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Targets    []string              `protobuf:"bytes,3,rep,name=targets,proto3" json:"targets,omitempty"`
	Title      string                `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Content    string                `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	Attributes map[string]*anypb.Any `protobuf:"bytes,6,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CreateTime int64                 `protobuf:"varint,7,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime int64                 `protobuf:"varint,8,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
}

func (x *CustomizeAlertNotifyTemplates) Reset() {
	*x = CustomizeAlertNotifyTemplates{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomizeAlertNotifyTemplates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomizeAlertNotifyTemplates) ProtoMessage() {}

func (x *CustomizeAlertNotifyTemplates) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomizeAlertNotifyTemplates.ProtoReflect.Descriptor instead.
func (*CustomizeAlertNotifyTemplates) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{49}
}

func (x *CustomizeAlertNotifyTemplates) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CustomizeAlertNotifyTemplates) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CustomizeAlertNotifyTemplates) GetTargets() []string {
	if x != nil {
		return x.Targets
	}
	return nil
}

func (x *CustomizeAlertNotifyTemplates) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CustomizeAlertNotifyTemplates) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CustomizeAlertNotifyTemplates) GetAttributes() map[string]*anypb.Any {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *CustomizeAlertNotifyTemplates) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *CustomizeAlertNotifyTemplates) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

type LanguageCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string  `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Quality float32 `protobuf:"fixed32,2,opt,name=quality,proto3" json:"quality,omitempty"`
}

func (x *LanguageCode) Reset() {
	*x = LanguageCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LanguageCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LanguageCode) ProtoMessage() {}

func (x *LanguageCode) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LanguageCode.ProtoReflect.Descriptor instead.
func (*LanguageCode) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{50}
}

func (x *LanguageCode) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *LanguageCode) GetQuality() float32 {
	if x != nil {
		return x.Quality
	}
	return 0
}

type CreateCustomizeAlertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TenantGroup string                `protobuf:"bytes,1,opt,name=tenantGroup,proto3" json:"tenantGroup,omitempty"`
	Alert       *CustomizeAlertDetail `protobuf:"bytes,2,opt,name=alert,proto3" json:"alert,omitempty"`
}

func (x *CreateCustomizeAlertRequest) Reset() {
	*x = CreateCustomizeAlertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCustomizeAlertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCustomizeAlertRequest) ProtoMessage() {}

func (x *CreateCustomizeAlertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCustomizeAlertRequest.ProtoReflect.Descriptor instead.
func (*CreateCustomizeAlertRequest) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{51}
}

func (x *CreateCustomizeAlertRequest) GetTenantGroup() string {
	if x != nil {
		return x.TenantGroup
	}
	return ""
}

func (x *CreateCustomizeAlertRequest) GetAlert() *CustomizeAlertDetail {
	if x != nil {
		return x.Alert
	}
	return nil
}

type CreateCustomizeAlertResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *CreateCustomizeAlertData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateCustomizeAlertResponse) Reset() {
	*x = CreateCustomizeAlertResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCustomizeAlertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCustomizeAlertResponse) ProtoMessage() {}

func (x *CreateCustomizeAlertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCustomizeAlertResponse.ProtoReflect.Descriptor instead.
func (*CreateCustomizeAlertResponse) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{52}
}

func (x *CreateCustomizeAlertResponse) GetData() *CreateCustomizeAlertData {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateCustomizeAlertData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateCustomizeAlertData) Reset() {
	*x = CreateCustomizeAlertData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCustomizeAlertData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCustomizeAlertData) ProtoMessage() {}

func (x *CreateCustomizeAlertData) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCustomizeAlertData.ProtoReflect.Descriptor instead.
func (*CreateCustomizeAlertData) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{53}
}

func (x *CreateCustomizeAlertData) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdateCustomizeAlertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TenantGroup string                `protobuf:"bytes,2,opt,name=tenantGroup,proto3" json:"tenantGroup,omitempty"`
	Alert       *CustomizeAlertDetail `protobuf:"bytes,3,opt,name=alert,proto3" json:"alert,omitempty"`
}

func (x *UpdateCustomizeAlertRequest) Reset() {
	*x = UpdateCustomizeAlertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCustomizeAlertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCustomizeAlertRequest) ProtoMessage() {}

func (x *UpdateCustomizeAlertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCustomizeAlertRequest.ProtoReflect.Descriptor instead.
func (*UpdateCustomizeAlertRequest) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{54}
}

func (x *UpdateCustomizeAlertRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateCustomizeAlertRequest) GetTenantGroup() string {
	if x != nil {
		return x.TenantGroup
	}
	return ""
}

func (x *UpdateCustomizeAlertRequest) GetAlert() *CustomizeAlertDetail {
	if x != nil {
		return x.Alert
	}
	return nil
}

type UpdateCustomizeAlertResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateCustomizeAlertResponse) Reset() {
	*x = UpdateCustomizeAlertResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCustomizeAlertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCustomizeAlertResponse) ProtoMessage() {}

func (x *UpdateCustomizeAlertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCustomizeAlertResponse.ProtoReflect.Descriptor instead.
func (*UpdateCustomizeAlertResponse) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{55}
}

type UpdateCustomizeAlertEnableRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TenantGroup string `protobuf:"bytes,2,opt,name=tenantGroup,proto3" json:"tenantGroup,omitempty"`
	Enable      bool   `protobuf:"varint,3,opt,name=enable,proto3" json:"enable,omitempty"`
}

func (x *UpdateCustomizeAlertEnableRequest) Reset() {
	*x = UpdateCustomizeAlertEnableRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCustomizeAlertEnableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCustomizeAlertEnableRequest) ProtoMessage() {}

func (x *UpdateCustomizeAlertEnableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCustomizeAlertEnableRequest.ProtoReflect.Descriptor instead.
func (*UpdateCustomizeAlertEnableRequest) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{56}
}

func (x *UpdateCustomizeAlertEnableRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateCustomizeAlertEnableRequest) GetTenantGroup() string {
	if x != nil {
		return x.TenantGroup
	}
	return ""
}

func (x *UpdateCustomizeAlertEnableRequest) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

type UpdateCustomizeAlertEnableResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateCustomizeAlertEnableResponse) Reset() {
	*x = UpdateCustomizeAlertEnableResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCustomizeAlertEnableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCustomizeAlertEnableResponse) ProtoMessage() {}

func (x *UpdateCustomizeAlertEnableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCustomizeAlertEnableResponse.ProtoReflect.Descriptor instead.
func (*UpdateCustomizeAlertEnableResponse) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{57}
}

type DeleteCustomizeAlertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TenantGroup string `protobuf:"bytes,2,opt,name=tenantGroup,proto3" json:"tenantGroup,omitempty"`
}

func (x *DeleteCustomizeAlertRequest) Reset() {
	*x = DeleteCustomizeAlertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCustomizeAlertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCustomizeAlertRequest) ProtoMessage() {}

func (x *DeleteCustomizeAlertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCustomizeAlertRequest.ProtoReflect.Descriptor instead.
func (*DeleteCustomizeAlertRequest) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{58}
}

func (x *DeleteCustomizeAlertRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeleteCustomizeAlertRequest) GetTenantGroup() string {
	if x != nil {
		return x.TenantGroup
	}
	return ""
}

type DeleteCustomizeAlertResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *DeleteCustomizeAlertData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DeleteCustomizeAlertResponse) Reset() {
	*x = DeleteCustomizeAlertResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCustomizeAlertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCustomizeAlertResponse) ProtoMessage() {}

func (x *DeleteCustomizeAlertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCustomizeAlertResponse.ProtoReflect.Descriptor instead.
func (*DeleteCustomizeAlertResponse) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{59}
}

func (x *DeleteCustomizeAlertResponse) GetData() *DeleteCustomizeAlertData {
	if x != nil {
		return x.Data
	}
	return nil
}

type DeleteCustomizeAlertData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteCustomizeAlertData) Reset() {
	*x = DeleteCustomizeAlertData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCustomizeAlertData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCustomizeAlertData) ProtoMessage() {}

func (x *DeleteCustomizeAlertData) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCustomizeAlertData.ProtoReflect.Descriptor instead.
func (*DeleteCustomizeAlertData) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{60}
}

func (x *DeleteCustomizeAlertData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetAlertRecordAttrsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TenantGroup string `protobuf:"bytes,1,opt,name=tenantGroup,proto3" json:"tenantGroup,omitempty"`
}

func (x *GetAlertRecordAttrsRequest) Reset() {
	*x = GetAlertRecordAttrsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAlertRecordAttrsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlertRecordAttrsRequest) ProtoMessage() {}

func (x *GetAlertRecordAttrsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlertRecordAttrsRequest.ProtoReflect.Descriptor instead.
func (*GetAlertRecordAttrsRequest) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{61}
}

func (x *GetAlertRecordAttrsRequest) GetTenantGroup() string {
	if x != nil {
		return x.TenantGroup
	}
	return ""
}

type GetAlertRecordAttrsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *AlertRecordAttr `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetAlertRecordAttrsResponse) Reset() {
	*x = GetAlertRecordAttrsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAlertRecordAttrsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlertRecordAttrsResponse) ProtoMessage() {}

func (x *GetAlertRecordAttrsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlertRecordAttrsResponse.ProtoReflect.Descriptor instead.
func (*GetAlertRecordAttrsResponse) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{62}
}

func (x *GetAlertRecordAttrsResponse) GetData() *AlertRecordAttr {
	if x != nil {
		return x.Data
	}
	return nil
}

type AlertRecordAttr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlertState  []*DisplayKey `protobuf:"bytes,1,rep,name=alertState,proto3" json:"alertState,omitempty"`
	AlertType   []*DisplayKey `protobuf:"bytes,2,rep,name=alertType,proto3" json:"alertType,omitempty"`
	HandleState []*DisplayKey `protobuf:"bytes,3,rep,name=handleState,proto3" json:"handleState,omitempty"`
}

func (x *AlertRecordAttr) Reset() {
	*x = AlertRecordAttr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertRecordAttr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertRecordAttr) ProtoMessage() {}

func (x *AlertRecordAttr) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertRecordAttr.ProtoReflect.Descriptor instead.
func (*AlertRecordAttr) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{63}
}

func (x *AlertRecordAttr) GetAlertState() []*DisplayKey {
	if x != nil {
		return x.AlertState
	}
	return nil
}

func (x *AlertRecordAttr) GetAlertType() []*DisplayKey {
	if x != nil {
		return x.AlertType
	}
	return nil
}

func (x *AlertRecordAttr) GetHandleState() []*DisplayKey {
	if x != nil {
		return x.HandleState
	}
	return nil
}

type GetAlertRecordsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TenantGroup string   `protobuf:"bytes,1,opt,name=tenantGroup,proto3" json:"tenantGroup,omitempty"`
	AlertGroup  []string `protobuf:"bytes,2,rep,name=alertGroup,proto3" json:"alertGroup,omitempty"`
	AlertState  []string `protobuf:"bytes,3,rep,name=alertState,proto3" json:"alertState,omitempty"`
	AlertType   []string `protobuf:"bytes,4,rep,name=alertType,proto3" json:"alertType,omitempty"`
	HandleState []string `protobuf:"bytes,5,rep,name=handleState,proto3" json:"handleState,omitempty"`
	HandlerId   []string `protobuf:"bytes,6,rep,name=handlerId,proto3" json:"handlerId,omitempty"`
	PageNo      int64    `protobuf:"varint,7,opt,name=pageNo,proto3" json:"pageNo,omitempty"`
	PageSize    int64    `protobuf:"varint,8,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *GetAlertRecordsRequest) Reset() {
	*x = GetAlertRecordsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAlertRecordsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlertRecordsRequest) ProtoMessage() {}

func (x *GetAlertRecordsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlertRecordsRequest.ProtoReflect.Descriptor instead.
func (*GetAlertRecordsRequest) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{64}
}

func (x *GetAlertRecordsRequest) GetTenantGroup() string {
	if x != nil {
		return x.TenantGroup
	}
	return ""
}

func (x *GetAlertRecordsRequest) GetAlertGroup() []string {
	if x != nil {
		return x.AlertGroup
	}
	return nil
}

func (x *GetAlertRecordsRequest) GetAlertState() []string {
	if x != nil {
		return x.AlertState
	}
	return nil
}

func (x *GetAlertRecordsRequest) GetAlertType() []string {
	if x != nil {
		return x.AlertType
	}
	return nil
}

func (x *GetAlertRecordsRequest) GetHandleState() []string {
	if x != nil {
		return x.HandleState
	}
	return nil
}

func (x *GetAlertRecordsRequest) GetHandlerId() []string {
	if x != nil {
		return x.HandlerId
	}
	return nil
}

func (x *GetAlertRecordsRequest) GetPageNo() int64 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *GetAlertRecordsRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type GetAlertRecordsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *GetAlertRecordsData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetAlertRecordsResponse) Reset() {
	*x = GetAlertRecordsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAlertRecordsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlertRecordsResponse) ProtoMessage() {}

func (x *GetAlertRecordsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlertRecordsResponse.ProtoReflect.Descriptor instead.
func (*GetAlertRecordsResponse) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{65}
}

func (x *GetAlertRecordsResponse) GetData() *GetAlertRecordsData {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetAlertRecordsData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List    []*AlertRecord `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total   int64          `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	UserIds []string       `protobuf:"bytes,3,rep,name=userIds,proto3" json:"userIds,omitempty"`
}

func (x *GetAlertRecordsData) Reset() {
	*x = GetAlertRecordsData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAlertRecordsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlertRecordsData) ProtoMessage() {}

func (x *GetAlertRecordsData) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlertRecordsData.ProtoReflect.Descriptor instead.
func (*GetAlertRecordsData) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{66}
}

func (x *GetAlertRecordsData) GetList() []*AlertRecord {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *GetAlertRecordsData) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetAlertRecordsData) GetUserIds() []string {
	if x != nil {
		return x.UserIds
	}
	return nil
}

type AlertRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId       string `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
	Scope         string `protobuf:"bytes,2,opt,name=scope,proto3" json:"scope,omitempty"`
	ScopeKey      string `protobuf:"bytes,3,opt,name=scopeKey,proto3" json:"scopeKey,omitempty"`
	AlertGroup    string `protobuf:"bytes,4,opt,name=alertGroup,proto3" json:"alertGroup,omitempty"`
	Title         string `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	AlertState    string `protobuf:"bytes,6,opt,name=alertState,proto3" json:"alertState,omitempty"`
	AlertType     string `protobuf:"bytes,7,opt,name=alertType,proto3" json:"alertType,omitempty"`
	AlertIndex    string `protobuf:"bytes,8,opt,name=alertIndex,proto3" json:"alertIndex,omitempty"`
	ExpressionKey string `protobuf:"bytes,9,opt,name=expressionKey,proto3" json:"expressionKey,omitempty"`
	AlertId       uint64 `protobuf:"varint,10,opt,name=alertId,proto3" json:"alertId,omitempty"`
	AlertName     string `protobuf:"bytes,11,opt,name=alertName,proto3" json:"alertName,omitempty"`
	RuleId        uint64 `protobuf:"varint,12,opt,name=ruleId,proto3" json:"ruleId,omitempty"`
	ProjectId     uint64 `protobuf:"varint,13,opt,name=projectId,proto3" json:"projectId,omitempty"`
	IssueId       uint64 `protobuf:"varint,14,opt,name=issueId,proto3" json:"issueId,omitempty"`
	HandleState   string `protobuf:"bytes,15,opt,name=handleState,proto3" json:"handleState,omitempty"`
	HandlerId     string `protobuf:"bytes,16,opt,name=handlerId,proto3" json:"handlerId,omitempty"`
	AlertTime     int64  `protobuf:"varint,17,opt,name=alertTime,proto3" json:"alertTime,omitempty"`
	HandleTime    int64  `protobuf:"varint,18,opt,name=handleTime,proto3" json:"handleTime,omitempty"`
	CreateTime    int64  `protobuf:"varint,19,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime    int64  `protobuf:"varint,20,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
}

func (x *AlertRecord) Reset() {
	*x = AlertRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertRecord) ProtoMessage() {}

func (x *AlertRecord) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertRecord.ProtoReflect.Descriptor instead.
func (*AlertRecord) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{67}
}

func (x *AlertRecord) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *AlertRecord) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *AlertRecord) GetScopeKey() string {
	if x != nil {
		return x.ScopeKey
	}
	return ""
}

func (x *AlertRecord) GetAlertGroup() string {
	if x != nil {
		return x.AlertGroup
	}
	return ""
}

func (x *AlertRecord) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AlertRecord) GetAlertState() string {
	if x != nil {
		return x.AlertState
	}
	return ""
}

func (x *AlertRecord) GetAlertType() string {
	if x != nil {
		return x.AlertType
	}
	return ""
}

func (x *AlertRecord) GetAlertIndex() string {
	if x != nil {
		return x.AlertIndex
	}
	return ""
}

func (x *AlertRecord) GetExpressionKey() string {
	if x != nil {
		return x.ExpressionKey
	}
	return ""
}

func (x *AlertRecord) GetAlertId() uint64 {
	if x != nil {
		return x.AlertId
	}
	return 0
}

func (x *AlertRecord) GetAlertName() string {
	if x != nil {
		return x.AlertName
	}
	return ""
}

func (x *AlertRecord) GetRuleId() uint64 {
	if x != nil {
		return x.RuleId
	}
	return 0
}

func (x *AlertRecord) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *AlertRecord) GetIssueId() uint64 {
	if x != nil {
		return x.IssueId
	}
	return 0
}

func (x *AlertRecord) GetHandleState() string {
	if x != nil {
		return x.HandleState
	}
	return ""
}

func (x *AlertRecord) GetHandlerId() string {
	if x != nil {
		return x.HandlerId
	}
	return ""
}

func (x *AlertRecord) GetAlertTime() int64 {
	if x != nil {
		return x.AlertTime
	}
	return 0
}

func (x *AlertRecord) GetHandleTime() int64 {
	if x != nil {
		return x.HandleTime
	}
	return 0
}

func (x *AlertRecord) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *AlertRecord) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

type GetAlertRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId     string `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
	TenantGroup string `protobuf:"bytes,2,opt,name=tenantGroup,proto3" json:"tenantGroup,omitempty"`
}

func (x *GetAlertRecordRequest) Reset() {
	*x = GetAlertRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAlertRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlertRecordRequest) ProtoMessage() {}

func (x *GetAlertRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlertRecordRequest.ProtoReflect.Descriptor instead.
func (*GetAlertRecordRequest) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{68}
}

func (x *GetAlertRecordRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *GetAlertRecordRequest) GetTenantGroup() string {
	if x != nil {
		return x.TenantGroup
	}
	return ""
}

type GetAlertRecordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *AlertRecord `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetAlertRecordResponse) Reset() {
	*x = GetAlertRecordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAlertRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlertRecordResponse) ProtoMessage() {}

func (x *GetAlertRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlertRecordResponse.ProtoReflect.Descriptor instead.
func (*GetAlertRecordResponse) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{69}
}

func (x *GetAlertRecordResponse) GetData() *AlertRecord {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetAlertHistoriesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId     string `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
	TenantGroup string `protobuf:"bytes,2,opt,name=tenantGroup,proto3" json:"tenantGroup,omitempty"`
	Start       int64  `protobuf:"varint,3,opt,name=start,proto3" json:"start,omitempty"`
	End         int64  `protobuf:"varint,4,opt,name=end,proto3" json:"end,omitempty"`
	Limit       int64  `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetAlertHistoriesRequest) Reset() {
	*x = GetAlertHistoriesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAlertHistoriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlertHistoriesRequest) ProtoMessage() {}

func (x *GetAlertHistoriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlertHistoriesRequest.ProtoReflect.Descriptor instead.
func (*GetAlertHistoriesRequest) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{70}
}

func (x *GetAlertHistoriesRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *GetAlertHistoriesRequest) GetTenantGroup() string {
	if x != nil {
		return x.TenantGroup
	}
	return ""
}

func (x *GetAlertHistoriesRequest) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *GetAlertHistoriesRequest) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *GetAlertHistoriesRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetAlertHistoriesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*AlertHistory `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetAlertHistoriesResponse) Reset() {
	*x = GetAlertHistoriesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAlertHistoriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlertHistoriesResponse) ProtoMessage() {}

func (x *GetAlertHistoriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlertHistoriesResponse.ProtoReflect.Descriptor instead.
func (*GetAlertHistoriesResponse) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{71}
}

func (x *GetAlertHistoriesResponse) GetData() []*AlertHistory {
	if x != nil {
		return x.Data
	}
	return nil
}

type AlertHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId    string `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
	Timestamp  int64  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	AlertState string `protobuf:"bytes,3,opt,name=alertState,proto3" json:"alertState,omitempty"`
	Title      string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Content    string `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	DisplayUrl string `protobuf:"bytes,6,opt,name=displayUrl,proto3" json:"displayUrl,omitempty"`
}

func (x *AlertHistory) Reset() {
	*x = AlertHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertHistory) ProtoMessage() {}

func (x *AlertHistory) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertHistory.ProtoReflect.Descriptor instead.
func (*AlertHistory) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{72}
}

func (x *AlertHistory) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *AlertHistory) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *AlertHistory) GetAlertState() string {
	if x != nil {
		return x.AlertState
	}
	return ""
}

func (x *AlertHistory) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AlertHistory) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *AlertHistory) GetDisplayUrl() string {
	if x != nil {
		return x.DisplayUrl
	}
	return ""
}

type CreateAlertRecordIssueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId     string                `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
	TenantGroup string                `protobuf:"bytes,2,opt,name=tenantGroup,proto3" json:"tenantGroup,omitempty"`
	Body        map[string]*anypb.Any `protobuf:"bytes,3,rep,name=body,proto3" json:"body,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CreateAlertRecordIssueRequest) Reset() {
	*x = CreateAlertRecordIssueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAlertRecordIssueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAlertRecordIssueRequest) ProtoMessage() {}

func (x *CreateAlertRecordIssueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAlertRecordIssueRequest.ProtoReflect.Descriptor instead.
func (*CreateAlertRecordIssueRequest) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{73}
}

func (x *CreateAlertRecordIssueRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *CreateAlertRecordIssueRequest) GetTenantGroup() string {
	if x != nil {
		return x.TenantGroup
	}
	return ""
}

func (x *CreateAlertRecordIssueRequest) GetBody() map[string]*anypb.Any {
	if x != nil {
		return x.Body
	}
	return nil
}

type CreateAlertRecordIssueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateAlertRecordIssueResponse) Reset() {
	*x = CreateAlertRecordIssueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAlertRecordIssueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAlertRecordIssueResponse) ProtoMessage() {}

func (x *CreateAlertRecordIssueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAlertRecordIssueResponse.ProtoReflect.Descriptor instead.
func (*CreateAlertRecordIssueResponse) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{74}
}

type UpdateAlertRecordIssueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId     string                `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
	TenantGroup string                `protobuf:"bytes,2,opt,name=tenantGroup,proto3" json:"tenantGroup,omitempty"`
	Body        map[string]*anypb.Any `protobuf:"bytes,3,rep,name=body,proto3" json:"body,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *UpdateAlertRecordIssueRequest) Reset() {
	*x = UpdateAlertRecordIssueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAlertRecordIssueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAlertRecordIssueRequest) ProtoMessage() {}

func (x *UpdateAlertRecordIssueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAlertRecordIssueRequest.ProtoReflect.Descriptor instead.
func (*UpdateAlertRecordIssueRequest) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{75}
}

func (x *UpdateAlertRecordIssueRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *UpdateAlertRecordIssueRequest) GetTenantGroup() string {
	if x != nil {
		return x.TenantGroup
	}
	return ""
}

func (x *UpdateAlertRecordIssueRequest) GetBody() map[string]*anypb.Any {
	if x != nil {
		return x.Body
	}
	return nil
}

type UpdateAlertRecordIssueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateAlertRecordIssueResponse) Reset() {
	*x = UpdateAlertRecordIssueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAlertRecordIssueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAlertRecordIssueResponse) ProtoMessage() {}

func (x *UpdateAlertRecordIssueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAlertRecordIssueResponse.ProtoReflect.Descriptor instead.
func (*UpdateAlertRecordIssueResponse) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{76}
}

type DashboardPreviewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TenantGroup string                `protobuf:"bytes,1,opt,name=tenantGroup,proto3" json:"tenantGroup,omitempty"`
	Alert       *CustomizeAlertDetail `protobuf:"bytes,2,opt,name=alert,proto3" json:"alert,omitempty"`
}

func (x *DashboardPreviewRequest) Reset() {
	*x = DashboardPreviewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DashboardPreviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DashboardPreviewRequest) ProtoMessage() {}

func (x *DashboardPreviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DashboardPreviewRequest.ProtoReflect.Descriptor instead.
func (*DashboardPreviewRequest) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{77}
}

func (x *DashboardPreviewRequest) GetTenantGroup() string {
	if x != nil {
		return x.TenantGroup
	}
	return ""
}

func (x *DashboardPreviewRequest) GetAlert() *CustomizeAlertDetail {
	if x != nil {
		return x.Alert
	}
	return nil
}

type DashboardPreviewResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *View `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DashboardPreviewResponse) Reset() {
	*x = DashboardPreviewResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DashboardPreviewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DashboardPreviewResponse) ProtoMessage() {}

func (x *DashboardPreviewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DashboardPreviewResponse.ProtoReflect.Descriptor instead.
func (*DashboardPreviewResponse) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{78}
}

func (x *DashboardPreviewResponse) GetData() *View {
	if x != nil {
		return x.Data
	}
	return nil
}

type View struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title          string     `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description    string     `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	ChartType      string     `protobuf:"bytes,3,opt,name=chartType,proto3" json:"chartType,omitempty"`
	DataSourceType string     `protobuf:"bytes,4,opt,name=dataSourceType,proto3" json:"dataSourceType,omitempty"`
	StaticData     *anypb.Any `protobuf:"bytes,5,opt,name=staticData,proto3" json:"staticData,omitempty"`
	Config         *Config    `protobuf:"bytes,6,opt,name=config,proto3" json:"config,omitempty"`
	Api            *API       `protobuf:"bytes,7,opt,name=api,proto3" json:"api,omitempty"`
	Controls       *anypb.Any `protobuf:"bytes,8,opt,name=controls,proto3" json:"controls,omitempty"`
}

func (x *View) Reset() {
	*x = View{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *View) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*View) ProtoMessage() {}

func (x *View) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use View.ProtoReflect.Descriptor instead.
func (*View) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{79}
}

func (x *View) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *View) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *View) GetChartType() string {
	if x != nil {
		return x.ChartType
	}
	return ""
}

func (x *View) GetDataSourceType() string {
	if x != nil {
		return x.DataSourceType
	}
	return ""
}

func (x *View) GetStaticData() *anypb.Any {
	if x != nil {
		return x.StaticData
	}
	return nil
}

func (x *View) GetConfig() *Config {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *View) GetApi() *API {
	if x != nil {
		return x.Api
	}
	return nil
}

func (x *View) GetControls() *anypb.Any {
	if x != nil {
		return x.Controls
	}
	return nil
}

type Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OptionProps      map[string]*anypb.Any `protobuf:"bytes,1,rep,name=optionProps,proto3" json:"optionProps,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	DataSourceConfig *anypb.Any            `protobuf:"bytes,2,opt,name=dataSourceConfig,proto3" json:"dataSourceConfig,omitempty"`
	Option           *anypb.Any            `protobuf:"bytes,3,opt,name=option,proto3" json:"option,omitempty"`
}

func (x *Config) Reset() {
	*x = Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{80}
}

func (x *Config) GetOptionProps() map[string]*anypb.Any {
	if x != nil {
		return x.OptionProps
	}
	return nil
}

func (x *Config) GetDataSourceConfig() *anypb.Any {
	if x != nil {
		return x.DataSourceConfig
	}
	return nil
}

func (x *Config) GetOption() *anypb.Any {
	if x != nil {
		return x.Option
	}
	return nil
}

type API struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url       string                `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Query     map[string]*anypb.Any `protobuf:"bytes,2,rep,name=query,proto3" json:"query,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Body      map[string]*anypb.Any `protobuf:"bytes,3,rep,name=body,proto3" json:"body,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Header    map[string]*anypb.Any `protobuf:"bytes,4,rep,name=header,proto3" json:"header,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ExtraData map[string]*anypb.Any `protobuf:"bytes,5,rep,name=extraData,proto3" json:"extraData,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Method    string                `protobuf:"bytes,6,opt,name=method,proto3" json:"method,omitempty"`
}

func (x *API) Reset() {
	*x = API{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *API) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*API) ProtoMessage() {}

func (x *API) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use API.ProtoReflect.Descriptor instead.
func (*API) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{81}
}

func (x *API) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *API) GetQuery() map[string]*anypb.Any {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *API) GetBody() map[string]*anypb.Any {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *API) GetHeader() map[string]*anypb.Any {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *API) GetExtraData() map[string]*anypb.Any {
	if x != nil {
		return x.ExtraData
	}
	return nil
}

func (x *API) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

type AlertExpression_AlertExpressionFunction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field      string     `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	Aggregator string     `protobuf:"bytes,2,opt,name=aggregator,proto3" json:"aggregator,omitempty"`
	Operator   string     `protobuf:"bytes,3,opt,name=operator,proto3" json:"operator,omitempty"`
	Value      *anypb.Any `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *AlertExpression_AlertExpressionFunction) Reset() {
	*x = AlertExpression_AlertExpressionFunction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alert_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertExpression_AlertExpressionFunction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertExpression_AlertExpressionFunction) ProtoMessage() {}

func (x *AlertExpression_AlertExpressionFunction) ProtoReflect() protoreflect.Message {
	mi := &file_alert_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertExpression_AlertExpressionFunction.ProtoReflect.Descriptor instead.
func (*AlertExpression_AlertExpressionFunction) Descriptor() ([]byte, []int) {
	return file_alert_proto_rawDescGZIP(), []int{13, 0}
}

func (x *AlertExpression_AlertExpressionFunction) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *AlertExpression_AlertExpressionFunction) GetAggregator() string {
	if x != nil {
		return x.Aggregator
	}
	return ""
}

func (x *AlertExpression_AlertExpressionFunction) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

func (x *AlertExpression_AlertExpressionFunction) GetValue() *anypb.Any {
	if x != nil {
		return x.Value
	}
	return nil
}

var File_alert_proto protoreflect.FileDescriptor

var file_alert_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x65,
	0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x1a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x77,
	0x69, 0x74, 0x6b, 0x6f, 0x77, 0x2f, 0x67, 0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x39, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x53,
	0x0a, 0x16, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x75, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73,
	0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0xb1, 0x02, 0x0a, 0x11, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x49, 0x0a, 0x0e, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d,
	0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x75, 0x6c, 0x65, 0x52, 0x0e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x75, 0x6c, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x12, 0x3a,
	0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d,
	0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52,
	0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x3e, 0x0a, 0x0a, 0x61, 0x67,
	0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4b, 0x65, 0x79, 0x52, 0x0a,
	0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x3b, 0x0a, 0x07, 0x73, 0x69,
	0x6c, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x72,
	0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x53, 0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x07,
	0x73, 0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x38, 0x0a, 0x0a, 0x44, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x22, 0x82, 0x01, 0x0a, 0x0d, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x75, 0x6c, 0x65, 0x12, 0x3c, 0x0a, 0x09, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73,
	0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x44, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x4b, 0x65, 0x79, 0x52, 0x09, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x33, 0x0a, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52,
	0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x22, 0xda, 0x05, 0x0a, 0x09, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x52, 0x75, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3e, 0x0a, 0x0a, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x72, 0x64,
	0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e,
	0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4b, 0x65, 0x79, 0x52, 0x0a, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x47, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e,
	0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x12, 0x43, 0x0a, 0x09, 0x66, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x65, 0x72, 0x64,
	0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x09, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x69, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x69, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x4d, 0x0a, 0x0a, 0x61, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x2e, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0x51, 0x0a, 0x0d, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x41, 0x6e, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x53,
	0x0a, 0x0f, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0xe1, 0x01, 0x0a, 0x11, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x75, 0x6c,
	0x65, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x05, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e,
	0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x44, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x4b, 0x65, 0x79, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x12,
	0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x2a, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x22, 0x4a, 0x0a, 0x08, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x22, 0x59, 0x0a, 0x0d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x53, 0x69, 0x6c,
	0x65, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x75, 0x6e,
	0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e,
	0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x44, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x4b, 0x65, 0x79, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x22, 0x7b,
	0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1e, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x10, 0x00, 0x52, 0x06, 0x70,
	0x61, 0x67, 0x65, 0x4e, 0x6f, 0x12, 0x24, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x08, 0xe2, 0xdf, 0x1f, 0x04, 0x10, 0x00, 0x18,
	0x65, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x4c, 0x0a, 0x12, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x36, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x55, 0x0a, 0x0e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2d, 0x0a, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x72, 0x64, 0x61,
	0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x22, 0xaf, 0x05, 0x0a, 0x05, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x49, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x53, 0x63, 0x6f, 0x70, 0x65,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x39, 0x0a, 0x05, 0x72, 0x75,
	0x6c, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x72, 0x64, 0x61,
	0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x05,
	0x72, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x3b, 0x0a, 0x08, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d,
	0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x08, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x73, 0x12, 0x40, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61,
	0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x12, 0x49, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e,
	0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12,
	0x22, 0x0a, 0x0c, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0x50, 0x0a, 0x0c, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41,
	0x6e, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x53, 0x0a,
	0x0f, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0xc4, 0x03, 0x0a, 0x0f, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x45, 0x78, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x75, 0x6c, 0x65, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x16,
	0x0a, 0x06, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x12, 0x59, 0x0a, 0x09, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x65, 0x72, 0x64, 0x61,
	0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x46, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x1a,
	0x97, 0x01, 0x0a, 0x17, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f,
	0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x2a, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41,
	0x6e, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xd0, 0x02, 0x0a, 0x0b, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x41, 0x0a, 0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x72, 0x64,
	0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x0b, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x69, 0x6e, 0x67,
	0x64, 0x69, 0x6e, 0x67, 0x55, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x69, 0x6e, 0x67, 0x64, 0x69, 0x6e, 0x67, 0x55, 0x72, 0x6c, 0x12, 0x40, 0x0a, 0x07, 0x73, 0x69,
	0x6c, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x65, 0x72,
	0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x53, 0x69, 0x6c, 0x65,
	0x6e, 0x63, 0x65, 0x52, 0x07, 0x73, 0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xf9, 0x01, 0x0a,
	0x0b, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x07, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x72, 0x64, 0x61,
	0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x07, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x73, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x56, 0x0a, 0x0c, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x32, 0x0a, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65,
	0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x22, 0x3c, 0x0a, 0x06, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0x56,
	0x0a, 0x12, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x53, 0x69, 0x6c,
	0x65, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x6e,
	0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x22, 0x4b, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x16, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x10, 0x00, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x41, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70,
	0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xb2, 0x02, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x49, 0x64, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x70, 0x49, 0x64, 0x73, 0x12, 0x39, 0x0a, 0x05, 0x72,
	0x75, 0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x72, 0x64,
	0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x3b, 0x0a, 0x08, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e,
	0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x08, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x4e, 0x0a, 0x13, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x37, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x21, 0x0a, 0x0f, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0xe2,
	0x02, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x10, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x49, 0x64, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x70, 0x49, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x39, 0x0a, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70,
	0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x45, 0x78, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x3b,
	0x0a, 0x08, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x52, 0x08, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0x15, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6c, 0x0a, 0x18, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x10, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x1b, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4e, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x10, 0x00, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x15, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3f, 0x0a, 0x1b,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x5b, 0x0a,
	0x1c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x65, 0x72,
	0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xc7, 0x02, 0x0a, 0x13, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x38, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61,
	0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4d,
	0x65, 0x74, 0x61, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x4a, 0x0a, 0x11,
	0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d,
	0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x11, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x46, 0x0a, 0x0f, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d,
	0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52,
	0x0f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73,
	0x12, 0x3e, 0x0a, 0x0a, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e,
	0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x4b, 0x65, 0x79, 0x52, 0x0a, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72,
	0x12, 0x22, 0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x53, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x22, 0xa8, 0x01, 0x0a, 0x0a, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4d,
	0x65, 0x74, 0x61, 0x12, 0x32, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d,
	0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4b, 0x65,
	0x79, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d,
	0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x2f,
	0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65,
	0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x2e, 0x54, 0x61, 0x67, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22,
	0x5d, 0x0a, 0x09, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x34, 0x0a, 0x05,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x72,
	0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x2e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4b, 0x65, 0x79, 0x52, 0x05, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x22, 0x57,
	0x0a, 0x07, 0x54, 0x61, 0x67, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x03, 0x74, 0x61, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73,
	0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x44, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x4b, 0x65, 0x79, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64,
	0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x22, 0x45, 0x0a, 0x21, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x6c,
	0x0a, 0x22, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x32, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70,
	0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x5a, 0x0a, 0x1e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x38,
	0x0a, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4b, 0x65, 0x79, 0x52,
	0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x22, 0x85, 0x01, 0x0a, 0x1b, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1e, 0x0a, 0x06, 0x70, 0x61,
	0x67, 0x65, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02,
	0x10, 0x00, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x12, 0x24, 0x0a, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x08, 0xe2, 0xdf,
	0x1f, 0x04, 0x10, 0x00, 0x18, 0x65, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x22, 0x60, 0x0a, 0x1c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69,
	0x7a, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x40, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c,
	0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69,
	0x7a, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x70, 0x0a, 0x18, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x69, 0x7a, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x3e, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70,
	0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a,
	0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x22, 0x8c, 0x02, 0x0a, 0x16, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69,
	0x7a, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x77,
	0x69, 0x6e, 0x64, 0x6f, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x77, 0x69, 0x6e,
	0x64, 0x6f, 0x77, 0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x61, 0x73,
	0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0x54, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x69, 0x7a, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x06, 0xe2, 0xdf, 0x1f,
	0x02, 0x10, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x59, 0x0a, 0x19, 0x47, 0x65, 0x74,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e,
	0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x69, 0x7a, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x88, 0x05, 0x0a, 0x14, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69,
	0x7a, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x53, 0x63, 0x6f, 0x70,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x49,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x53, 0x63,
	0x6f, 0x70, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x58, 0x0a,
	0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x38, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d,
	0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x61, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x3c, 0x0a, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73,
	0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x05,
	0x72, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x4d, 0x0a, 0x08, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d,
	0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x08, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x0d, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70,
	0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x1a, 0x53, 0x0a, 0x0f, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0xd4, 0x05, 0x0a, 0x12, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x12, 0x4c, 0x0a, 0x09, 0x66, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x52, 0x75, 0x6c, 0x65, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x66,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x46, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x65, 0x72, 0x64, 0x61,
	0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x75, 0x6c,
	0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73,
	0x12, 0x4a, 0x0a, 0x06, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x32, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x56, 0x0a, 0x0a,
	0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x36, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x64, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x13, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x64, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0x39, 0x0a, 0x0b, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x1a, 0x53, 0x0a, 0x0f, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xe0, 0x01, 0x0a, 0x1a, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x69, 0x7a, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x46, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61,
	0x6c, 0x69, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61,
	0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f,
	0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x2a, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41,
	0x6e, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74,
	0x61, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74,
	0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x22, 0x90, 0x01, 0x0a, 0x18, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x75, 0x6c, 0x65,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x22, 0x85, 0x03, 0x0a,
	0x1d, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x61, 0x0a, 0x0a,
	0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x41, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x73, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x1a,
	0x53, 0x0a, 0x0f, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x3c, 0x0a, 0x0c, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x71, 0x75, 0x61, 0x6c,
	0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x71, 0x75, 0x61, 0x6c, 0x69,
	0x74, 0x79, 0x22, 0x7f, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x3e, 0x0a, 0x05, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70,
	0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a,
	0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x05, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x22, 0x60, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2c, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d,
	0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x2a, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x97, 0x01, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x06, 0xe2,
	0xdf, 0x1f, 0x02, 0x10, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x3e, 0x0a, 0x05, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x65, 0x72, 0x64,
	0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x05, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x22, 0x1e, 0x0a, 0x1c, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x75, 0x0a, 0x21, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x06, 0xe2, 0xdf,
	0x1f, 0x02, 0x10, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x22, 0x24, 0x0a, 0x22, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x57, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x10, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x22, 0x60, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x69, 0x7a, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x40, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x69, 0x7a, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x2e, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x3e, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x41, 0x74, 0x74, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x22, 0x56, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x41, 0x74, 0x74, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x37, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x41, 0x74, 0x74, 0x72, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xd1, 0x01, 0x0a, 0x0f,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x41, 0x74, 0x74, 0x72, 0x12,
	0x3e, 0x0a, 0x0a, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61,
	0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x4b, 0x65, 0x79, 0x52, 0x0a, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x3c, 0x0a, 0x09, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70,
	0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4b,
	0x65, 0x79, 0x52, 0x09, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x40, 0x0a,
	0x0b, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70,
	0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4b,
	0x65, 0x79, 0x52, 0x0b, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22,
	0x8c, 0x02, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1e, 0x0a, 0x0a,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0a, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1e, 0x0a, 0x0a,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0a, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x09, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x68, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0b, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x09, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61,
	0x67, 0x65, 0x4e, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65,
	0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x56,
	0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d,
	0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x7a, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x33, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x72,
	0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x73, 0x22, 0xd9, 0x04, 0x0a, 0x0b, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f,
	0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x1e,
	0x0a, 0x0a, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x24, 0x0a, 0x0d, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x4b, 0x65, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x78, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x72, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x73, 0x75, 0x65, 0x49,
	0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x69, 0x73, 0x73, 0x75, 0x65, 0x49, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x53,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x22, 0x4d, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x72,
	0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x94, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x65, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x51, 0x0a, 0x19, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e,
	0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xb6, 0x01, 0x0a,
	0x0c, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x18, 0x0a,
	0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x55, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x55, 0x72, 0x6c, 0x22, 0xfb, 0x01, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x73, 0x73, 0x75, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x4f, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x3b, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d,
	0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x42, 0x6f, 0x64, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04,
	0x62, 0x6f, 0x64, 0x79, 0x1a, 0x4d, 0x0a, 0x09, 0x42, 0x6f, 0x64, 0x79, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x20, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xfb, 0x01, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x73, 0x73, 0x75, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x4f, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x3b, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d,
	0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x42, 0x6f, 0x64, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04,
	0x62, 0x6f, 0x64, 0x79, 0x1a, 0x4d, 0x0a, 0x09, 0x42, 0x6f, 0x64, 0x79, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x20, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7b, 0x0a, 0x17, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x12, 0x3e, 0x0a, 0x05, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d,
	0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x05, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x22, 0x48, 0x0a, 0x18, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x50,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65,
	0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xcb, 0x02, 0x0a,
	0x04, 0x56, 0x69, 0x65, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x68, 0x61, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x68, 0x61, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x64,
	0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x34, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x0a, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x12, 0x32, 0x0a, 0x06, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x72, 0x64, 0x61,
	0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x29, 0x0a,
	0x03, 0x61, 0x70, 0x69, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x72, 0x64,
	0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e,
	0x41, 0x50, 0x49, 0x52, 0x03, 0x61, 0x70, 0x69, 0x12, 0x30, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79,
	0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x73, 0x22, 0x9d, 0x02, 0x0a, 0x06, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x4d, 0x0a, 0x0b, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x72, 0x6f, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x65, 0x72, 0x64,
	0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f,
	0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x72, 0x6f, 0x70, 0x73, 0x12, 0x40, 0x0a, 0x10, 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x41, 0x6e, 0x79, 0x52, 0x10, 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2c, 0x0a, 0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x06, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x54, 0x0a, 0x10, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72,
	0x6f, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xe7, 0x04, 0x0a, 0x03, 0x41,
	0x50, 0x49, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x72, 0x6c, 0x12, 0x38, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61,
	0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x41, 0x50, 0x49, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x35,
	0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65,
	0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x2e, 0x41, 0x50, 0x49, 0x2e, 0x42, 0x6f, 0x64, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x3b, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70,
	0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x41, 0x50, 0x49, 0x2e, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x12, 0x44, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x72, 0x61, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70,
	0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x41, 0x50, 0x49, 0x2e, 0x45,
	0x78, 0x74, 0x72, 0x61, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x1a, 0x4e, 0x0a, 0x0a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x1a, 0x4d, 0x0a, 0x09, 0x42, 0x6f, 0x64, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a,
	0x4f, 0x0a, 0x0b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x1a, 0x52, 0x0a, 0x0e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x32, 0xcc, 0x1a, 0x0a, 0x0c, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x86, 0x01, 0x0a, 0x0e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x29, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e,
	0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61,
	0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x12, 0x15, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70,
	0x6d, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2f, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x74,
	0x0a, 0x0a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x25, 0x2e, 0x65,
	0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61,
	0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x11, 0x12, 0x0f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x6d, 0x2f, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x73, 0x12, 0x72, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x12, 0x23, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70,
	0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x15, 0x12, 0x13, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x6d, 0x2f, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x76, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x26, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d,
	0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x27, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10,
	0x22, 0x0e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x6d, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x12, 0x7b, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12,
	0x26, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d,
	0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x1a, 0x13, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x70, 0x6d, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x94, 0x01,
	0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x2c, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61,
	0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2d, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d,
	0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x1a, 0x1a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x70, 0x6d, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x73, 0x77,
	0x69, 0x74, 0x63, 0x68, 0x12, 0x7b, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x12, 0x26, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61,
	0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x65, 0x72,
	0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x2a, 0x13, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x70, 0x6d, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2f, 0x7b, 0x69, 0x64,
	0x7d, 0x12, 0xa4, 0x01, 0x0a, 0x14, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x69, 0x7a, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x2f, 0x2e, 0x65, 0x72, 0x64,
	0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x65, 0x72,
	0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x23, 0x12, 0x21, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x6d, 0x2f,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73,
	0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0xbf, 0x01, 0x0a, 0x1a, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x35, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d,
	0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36,
	0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69,
	0x7a, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x12, 0x2a,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x6d, 0x2f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69,
	0x7a, 0x65, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x73, 0x2f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x12, 0x9c, 0x01, 0x0a, 0x14, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x73, 0x12, 0x2f, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61,
	0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e,
	0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x6d, 0x2f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69,
	0x7a, 0x65, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x12, 0x97, 0x01, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12,
	0x2c, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a,
	0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e,
	0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1f, 0x12, 0x1d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x6d, 0x2f, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2f, 0x7b,
	0x69, 0x64, 0x7d, 0x12, 0x9b, 0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x2f, 0x2e, 0x65,
	0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a,
	0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e,
	0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69,
	0x7a, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x22, 0x18, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70,
	0x6d, 0x2f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x2f, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x12, 0xa0, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x2f, 0x2e, 0x65, 0x72, 0x64,
	0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x65, 0x72,
	0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x1a, 0x1d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x6d, 0x2f,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2f,
	0x7b, 0x69, 0x64, 0x7d, 0x12, 0xb9, 0x01, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x35, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61,
	0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x65, 0x72, 0x64,
	0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x1a, 0x24, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x70, 0x6d, 0x2f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x2f, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68,
	0x12, 0xa0, 0x01, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x69, 0x7a, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x2f, 0x2e, 0x65, 0x72, 0x64, 0x61,
	0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x65, 0x72, 0x64,
	0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1f, 0x2a, 0x1d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x6d, 0x2f, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2f, 0x7b,
	0x69, 0x64, 0x7d, 0x12, 0x9b, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x41, 0x74, 0x74, 0x72, 0x73, 0x12, 0x2e, 0x2e, 0x65, 0x72,
	0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x41,
	0x74, 0x74, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x65, 0x72,
	0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x41,
	0x74, 0x74, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1d, 0x12, 0x1b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x6d, 0x2f, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x2d, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2d, 0x61, 0x74, 0x74, 0x72,
	0x73, 0x12, 0x8a, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x2a, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70,
	0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2b, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d,
	0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x6d,
	0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2d, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x91,
	0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x12, 0x29, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d,
	0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x65,
	0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22,
	0x12, 0x20, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x6d, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x2d, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x2f, 0x7b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x7d, 0x12, 0xa4, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x2c, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e,
	0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73,
	0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x12, 0x2a, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x6d, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2d, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x73, 0x2f, 0x7b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x7d, 0x2f,
	0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0xb0, 0x01, 0x0a, 0x16, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49,
	0x73, 0x73, 0x75, 0x65, 0x12, 0x31, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e,
	0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x73, 0x73, 0x75, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d,
	0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x73,
	0x73, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2f, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x29, 0x22, 0x27, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x6d, 0x2f, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x2d, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x2f, 0x7b, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x7d, 0x2f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x73, 0x12, 0xb0, 0x01, 0x0a,
	0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x49, 0x73, 0x73, 0x75, 0x65, 0x12, 0x31, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d,
	0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x73,
	0x73, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x65, 0x72, 0x64,
	0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2f,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x1a, 0x27, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x6d,
	0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2d, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x2f, 0x7b,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x7d, 0x2f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x73, 0x12,
	0xb1, 0x01, 0x0a, 0x10, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x50, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x12, 0x2b, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e,
	0x61, 0x70, 0x6d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2c, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d,
	0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x42, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3c, 0x22, 0x3a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70,
	0x6d, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2d, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x2f,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73,
	0x2f, 0x64, 0x61, 0x73, 0x68, 0x2d, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2f, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x42, 0x38, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x65, 0x72, 0x64, 0x61, 0x2d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x65,
	0x72, 0x64, 0x61, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x67, 0x6f, 0x2f, 0x6d, 0x73, 0x70,
	0x2f, 0x61, 0x70, 0x6d, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_alert_proto_rawDescOnce sync.Once
	file_alert_proto_rawDescData = file_alert_proto_rawDesc
)

func file_alert_proto_rawDescGZIP() []byte {
	file_alert_proto_rawDescOnce.Do(func() {
		file_alert_proto_rawDescData = protoimpl.X.CompressGZIP(file_alert_proto_rawDescData)
	})
	return file_alert_proto_rawDescData
}

var file_alert_proto_msgTypes = make([]protoimpl.MessageInfo, 98)
var file_alert_proto_goTypes = []interface{}{
	(*QueryAlertRuleRequest)(nil),                   // 0: erda.msp.apm.alert.QueryAlertRuleRequest
	(*QueryAlertRuleResponse)(nil),                  // 1: erda.msp.apm.alert.QueryAlertRuleResponse
	(*AlertTypeRuleResp)(nil),                       // 2: erda.msp.apm.alert.AlertTypeRuleResp
	(*DisplayKey)(nil),                              // 3: erda.msp.apm.alert.DisplayKey
	(*AlertTypeRule)(nil),                           // 4: erda.msp.apm.alert.AlertTypeRule
	(*AlertRule)(nil),                               // 5: erda.msp.apm.alert.AlertRule
	(*AlertRuleFunction)(nil),                       // 6: erda.msp.apm.alert.AlertRuleFunction
	(*Operator)(nil),                                // 7: erda.msp.apm.alert.Operator
	(*NotifySilence)(nil),                           // 8: erda.msp.apm.alert.NotifySilence
	(*QueryAlertRequest)(nil),                       // 9: erda.msp.apm.alert.QueryAlertRequest
	(*QueryAlertResponse)(nil),                      // 10: erda.msp.apm.alert.QueryAlertResponse
	(*QueryAlertData)(nil),                          // 11: erda.msp.apm.alert.QueryAlertData
	(*Alert)(nil),                                   // 12: erda.msp.apm.alert.Alert
	(*AlertExpression)(nil),                         // 13: erda.msp.apm.alert.AlertExpression
	(*AlertNotify)(nil),                             // 14: erda.msp.apm.alert.AlertNotify
	(*NotifyGroup)(nil),                             // 15: erda.msp.apm.alert.NotifyGroup
	(*NotifyTarget)(nil),                            // 16: erda.msp.apm.alert.NotifyTarget
	(*Target)(nil),                                  // 17: erda.msp.apm.alert.Target
	(*AlertNotifySilence)(nil),                      // 18: erda.msp.apm.alert.AlertNotifySilence
	(*GetAlertRequest)(nil),                         // 19: erda.msp.apm.alert.GetAlertRequest
	(*GetAlertResponse)(nil),                        // 20: erda.msp.apm.alert.GetAlertResponse
	(*CreateAlertRequest)(nil),                      // 21: erda.msp.apm.alert.CreateAlertRequest
	(*CreateAlertResponse)(nil),                     // 22: erda.msp.apm.alert.CreateAlertResponse
	(*CreateAlertData)(nil),                         // 23: erda.msp.apm.alert.CreateAlertData
	(*UpdateAlertRequest)(nil),                      // 24: erda.msp.apm.alert.UpdateAlertRequest
	(*UpdateAlertResponse)(nil),                     // 25: erda.msp.apm.alert.UpdateAlertResponse
	(*UpdateAlertEnableRequest)(nil),                // 26: erda.msp.apm.alert.UpdateAlertEnableRequest
	(*UpdateAlertEnableResponse)(nil),               // 27: erda.msp.apm.alert.UpdateAlertEnableResponse
	(*DeleteAlertRequest)(nil),                      // 28: erda.msp.apm.alert.DeleteAlertRequest
	(*DeleteAlertResponse)(nil),                     // 29: erda.msp.apm.alert.DeleteAlertResponse
	(*QueryCustomizeMetricRequest)(nil),             // 30: erda.msp.apm.alert.QueryCustomizeMetricRequest
	(*QueryCustomizeMetricResponse)(nil),            // 31: erda.msp.apm.alert.QueryCustomizeMetricResponse
	(*CustomizeMetricData)(nil),                     // 32: erda.msp.apm.alert.CustomizeMetricData
	(*MetricMeta)(nil),                              // 33: erda.msp.apm.alert.MetricMeta
	(*FieldMeta)(nil),                               // 34: erda.msp.apm.alert.FieldMeta
	(*TagMeta)(nil),                                 // 35: erda.msp.apm.alert.TagMeta
	(*QueryCustomizeNotifyTargetRequest)(nil),       // 36: erda.msp.apm.alert.QueryCustomizeNotifyTargetRequest
	(*QueryCustomizeNotifyTargetResponse)(nil),      // 37: erda.msp.apm.alert.QueryCustomizeNotifyTargetResponse
	(*QueryCustomizeNotifyTargetData)(nil),          // 38: erda.msp.apm.alert.QueryCustomizeNotifyTargetData
	(*QueryCustomizeAlertsRequest)(nil),             // 39: erda.msp.apm.alert.QueryCustomizeAlertsRequest
	(*QueryCustomizeAlertsResponse)(nil),            // 40: erda.msp.apm.alert.QueryCustomizeAlertsResponse
	(*QueryCustomizeAlertsData)(nil),                // 41: erda.msp.apm.alert.QueryCustomizeAlertsData
	(*CustomizeAlertOverview)(nil),                  // 42: erda.msp.apm.alert.CustomizeAlertOverview
	(*GetCustomizeAlertRequest)(nil),                // 43: erda.msp.apm.alert.GetCustomizeAlertRequest
	(*GetCustomizeAlertResponse)(nil),               // 44: erda.msp.apm.alert.GetCustomizeAlertResponse
	(*CustomizeAlertDetail)(nil),                    // 45: erda.msp.apm.alert.CustomizeAlertDetail
	(*CustomizeAlertRule)(nil),                      // 46: erda.msp.apm.alert.CustomizeAlertRule
	(*CustomizeAlertRuleFunction)(nil),              // 47: erda.msp.apm.alert.CustomizeAlertRuleFunction
	(*CustomizeAlertRuleFilter)(nil),                // 48: erda.msp.apm.alert.CustomizeAlertRuleFilter
	(*CustomizeAlertNotifyTemplates)(nil),           // 49: erda.msp.apm.alert.CustomizeAlertNotifyTemplates
	(*LanguageCode)(nil),                            // 50: erda.msp.apm.alert.LanguageCode
	(*CreateCustomizeAlertRequest)(nil),             // 51: erda.msp.apm.alert.CreateCustomizeAlertRequest
	(*CreateCustomizeAlertResponse)(nil),            // 52: erda.msp.apm.alert.CreateCustomizeAlertResponse
	(*CreateCustomizeAlertData)(nil),                // 53: erda.msp.apm.alert.CreateCustomizeAlertData
	(*UpdateCustomizeAlertRequest)(nil),             // 54: erda.msp.apm.alert.UpdateCustomizeAlertRequest
	(*UpdateCustomizeAlertResponse)(nil),            // 55: erda.msp.apm.alert.UpdateCustomizeAlertResponse
	(*UpdateCustomizeAlertEnableRequest)(nil),       // 56: erda.msp.apm.alert.UpdateCustomizeAlertEnableRequest
	(*UpdateCustomizeAlertEnableResponse)(nil),      // 57: erda.msp.apm.alert.UpdateCustomizeAlertEnableResponse
	(*DeleteCustomizeAlertRequest)(nil),             // 58: erda.msp.apm.alert.DeleteCustomizeAlertRequest
	(*DeleteCustomizeAlertResponse)(nil),            // 59: erda.msp.apm.alert.DeleteCustomizeAlertResponse
	(*DeleteCustomizeAlertData)(nil),                // 60: erda.msp.apm.alert.DeleteCustomizeAlertData
	(*GetAlertRecordAttrsRequest)(nil),              // 61: erda.msp.apm.alert.GetAlertRecordAttrsRequest
	(*GetAlertRecordAttrsResponse)(nil),             // 62: erda.msp.apm.alert.GetAlertRecordAttrsResponse
	(*AlertRecordAttr)(nil),                         // 63: erda.msp.apm.alert.AlertRecordAttr
	(*GetAlertRecordsRequest)(nil),                  // 64: erda.msp.apm.alert.GetAlertRecordsRequest
	(*GetAlertRecordsResponse)(nil),                 // 65: erda.msp.apm.alert.GetAlertRecordsResponse
	(*GetAlertRecordsData)(nil),                     // 66: erda.msp.apm.alert.GetAlertRecordsData
	(*AlertRecord)(nil),                             // 67: erda.msp.apm.alert.AlertRecord
	(*GetAlertRecordRequest)(nil),                   // 68: erda.msp.apm.alert.GetAlertRecordRequest
	(*GetAlertRecordResponse)(nil),                  // 69: erda.msp.apm.alert.GetAlertRecordResponse
	(*GetAlertHistoriesRequest)(nil),                // 70: erda.msp.apm.alert.GetAlertHistoriesRequest
	(*GetAlertHistoriesResponse)(nil),               // 71: erda.msp.apm.alert.GetAlertHistoriesResponse
	(*AlertHistory)(nil),                            // 72: erda.msp.apm.alert.AlertHistory
	(*CreateAlertRecordIssueRequest)(nil),           // 73: erda.msp.apm.alert.CreateAlertRecordIssueRequest
	(*CreateAlertRecordIssueResponse)(nil),          // 74: erda.msp.apm.alert.CreateAlertRecordIssueResponse
	(*UpdateAlertRecordIssueRequest)(nil),           // 75: erda.msp.apm.alert.UpdateAlertRecordIssueRequest
	(*UpdateAlertRecordIssueResponse)(nil),          // 76: erda.msp.apm.alert.UpdateAlertRecordIssueResponse
	(*DashboardPreviewRequest)(nil),                 // 77: erda.msp.apm.alert.DashboardPreviewRequest
	(*DashboardPreviewResponse)(nil),                // 78: erda.msp.apm.alert.DashboardPreviewResponse
	(*View)(nil),                                    // 79: erda.msp.apm.alert.View
	(*Config)(nil),                                  // 80: erda.msp.apm.alert.Config
	(*API)(nil),                                     // 81: erda.msp.apm.alert.API
	nil,                                             // 82: erda.msp.apm.alert.AlertRule.TemplateEntry
	nil,                                             // 83: erda.msp.apm.alert.AlertRule.AttributesEntry
	nil,                                             // 84: erda.msp.apm.alert.Alert.FiltersEntry
	nil,                                             // 85: erda.msp.apm.alert.Alert.AttributesEntry
	(*AlertExpression_AlertExpressionFunction)(nil), // 86: erda.msp.apm.alert.AlertExpression.AlertExpressionFunction
	nil,                           // 87: erda.msp.apm.alert.CustomizeAlertDetail.AttributesEntry
	nil,                           // 88: erda.msp.apm.alert.CustomizeAlertRule.SelectEntry
	nil,                           // 89: erda.msp.apm.alert.CustomizeAlertRule.AttributesEntry
	nil,                           // 90: erda.msp.apm.alert.CustomizeAlertNotifyTemplates.AttributesEntry
	nil,                           // 91: erda.msp.apm.alert.CreateAlertRecordIssueRequest.BodyEntry
	nil,                           // 92: erda.msp.apm.alert.UpdateAlertRecordIssueRequest.BodyEntry
	nil,                           // 93: erda.msp.apm.alert.Config.OptionPropsEntry
	nil,                           // 94: erda.msp.apm.alert.API.QueryEntry
	nil,                           // 95: erda.msp.apm.alert.API.BodyEntry
	nil,                           // 96: erda.msp.apm.alert.API.HeaderEntry
	nil,                           // 97: erda.msp.apm.alert.API.ExtraDataEntry
	(*anypb.Any)(nil),             // 98: google.protobuf.Any
	(*timestamppb.Timestamp)(nil), // 99: google.protobuf.Timestamp
}
var file_alert_proto_depIdxs = []int32{
	2,   // 0: erda.msp.apm.alert.QueryAlertRuleResponse.data:type_name -> erda.msp.apm.alert.AlertTypeRuleResp
	4,   // 1: erda.msp.apm.alert.AlertTypeRuleResp.alertTypeRules:type_name -> erda.msp.apm.alert.AlertTypeRule
	7,   // 2: erda.msp.apm.alert.AlertTypeRuleResp.operators:type_name -> erda.msp.apm.alert.Operator
	3,   // 3: erda.msp.apm.alert.AlertTypeRuleResp.aggregator:type_name -> erda.msp.apm.alert.DisplayKey
	8,   // 4: erda.msp.apm.alert.AlertTypeRuleResp.silence:type_name -> erda.msp.apm.alert.NotifySilence
	3,   // 5: erda.msp.apm.alert.AlertTypeRule.alertType:type_name -> erda.msp.apm.alert.DisplayKey
	5,   // 6: erda.msp.apm.alert.AlertTypeRule.rules:type_name -> erda.msp.apm.alert.AlertRule
	3,   // 7: erda.msp.apm.alert.AlertRule.alertIndex:type_name -> erda.msp.apm.alert.DisplayKey
	82,  // 8: erda.msp.apm.alert.AlertRule.template:type_name -> erda.msp.apm.alert.AlertRule.TemplateEntry
	6,   // 9: erda.msp.apm.alert.AlertRule.functions:type_name -> erda.msp.apm.alert.AlertRuleFunction
	83,  // 10: erda.msp.apm.alert.AlertRule.attributes:type_name -> erda.msp.apm.alert.AlertRule.AttributesEntry
	3,   // 11: erda.msp.apm.alert.AlertRuleFunction.field:type_name -> erda.msp.apm.alert.DisplayKey
	98,  // 12: erda.msp.apm.alert.AlertRuleFunction.value:type_name -> google.protobuf.Any
	3,   // 13: erda.msp.apm.alert.NotifySilence.unit:type_name -> erda.msp.apm.alert.DisplayKey
	11,  // 14: erda.msp.apm.alert.QueryAlertResponse.data:type_name -> erda.msp.apm.alert.QueryAlertData
	12,  // 15: erda.msp.apm.alert.QueryAlertData.list:type_name -> erda.msp.apm.alert.Alert
	13,  // 16: erda.msp.apm.alert.Alert.rules:type_name -> erda.msp.apm.alert.AlertExpression
	14,  // 17: erda.msp.apm.alert.Alert.notifies:type_name -> erda.msp.apm.alert.AlertNotify
	84,  // 18: erda.msp.apm.alert.Alert.filters:type_name -> erda.msp.apm.alert.Alert.FiltersEntry
	85,  // 19: erda.msp.apm.alert.Alert.attributes:type_name -> erda.msp.apm.alert.Alert.AttributesEntry
	86,  // 20: erda.msp.apm.alert.AlertExpression.functions:type_name -> erda.msp.apm.alert.AlertExpression.AlertExpressionFunction
	15,  // 21: erda.msp.apm.alert.AlertNotify.notifyGroup:type_name -> erda.msp.apm.alert.NotifyGroup
	18,  // 22: erda.msp.apm.alert.AlertNotify.silence:type_name -> erda.msp.apm.alert.AlertNotifySilence
	16,  // 23: erda.msp.apm.alert.NotifyGroup.targets:type_name -> erda.msp.apm.alert.NotifyTarget
	99,  // 24: erda.msp.apm.alert.NotifyGroup.createdAt:type_name -> google.protobuf.Timestamp
	17,  // 25: erda.msp.apm.alert.NotifyTarget.values:type_name -> erda.msp.apm.alert.Target
	12,  // 26: erda.msp.apm.alert.GetAlertResponse.data:type_name -> erda.msp.apm.alert.Alert
	13,  // 27: erda.msp.apm.alert.CreateAlertRequest.rules:type_name -> erda.msp.apm.alert.AlertExpression
	14,  // 28: erda.msp.apm.alert.CreateAlertRequest.notifies:type_name -> erda.msp.apm.alert.AlertNotify
	23,  // 29: erda.msp.apm.alert.CreateAlertResponse.data:type_name -> erda.msp.apm.alert.CreateAlertData
	13,  // 30: erda.msp.apm.alert.UpdateAlertRequest.rules:type_name -> erda.msp.apm.alert.AlertExpression
	14,  // 31: erda.msp.apm.alert.UpdateAlertRequest.notifies:type_name -> erda.msp.apm.alert.AlertNotify
	32,  // 32: erda.msp.apm.alert.QueryCustomizeMetricResponse.data:type_name -> erda.msp.apm.alert.CustomizeMetricData
	33,  // 33: erda.msp.apm.alert.CustomizeMetricData.metrics:type_name -> erda.msp.apm.alert.MetricMeta
	7,   // 34: erda.msp.apm.alert.CustomizeMetricData.functionOperators:type_name -> erda.msp.apm.alert.Operator
	7,   // 35: erda.msp.apm.alert.CustomizeMetricData.filterOperators:type_name -> erda.msp.apm.alert.Operator
	3,   // 36: erda.msp.apm.alert.CustomizeMetricData.aggregator:type_name -> erda.msp.apm.alert.DisplayKey
	3,   // 37: erda.msp.apm.alert.MetricMeta.name:type_name -> erda.msp.apm.alert.DisplayKey
	34,  // 38: erda.msp.apm.alert.MetricMeta.fields:type_name -> erda.msp.apm.alert.FieldMeta
	35,  // 39: erda.msp.apm.alert.MetricMeta.tags:type_name -> erda.msp.apm.alert.TagMeta
	3,   // 40: erda.msp.apm.alert.FieldMeta.field:type_name -> erda.msp.apm.alert.DisplayKey
	3,   // 41: erda.msp.apm.alert.TagMeta.tag:type_name -> erda.msp.apm.alert.DisplayKey
	38,  // 42: erda.msp.apm.alert.QueryCustomizeNotifyTargetResponse.data:type_name -> erda.msp.apm.alert.QueryCustomizeNotifyTargetData
	3,   // 43: erda.msp.apm.alert.QueryCustomizeNotifyTargetData.targets:type_name -> erda.msp.apm.alert.DisplayKey
	41,  // 44: erda.msp.apm.alert.QueryCustomizeAlertsResponse.data:type_name -> erda.msp.apm.alert.QueryCustomizeAlertsData
	42,  // 45: erda.msp.apm.alert.QueryCustomizeAlertsData.list:type_name -> erda.msp.apm.alert.CustomizeAlertOverview
	45,  // 46: erda.msp.apm.alert.GetCustomizeAlertResponse.data:type_name -> erda.msp.apm.alert.CustomizeAlertDetail
	87,  // 47: erda.msp.apm.alert.CustomizeAlertDetail.attributes:type_name -> erda.msp.apm.alert.CustomizeAlertDetail.AttributesEntry
	46,  // 48: erda.msp.apm.alert.CustomizeAlertDetail.rules:type_name -> erda.msp.apm.alert.CustomizeAlertRule
	49,  // 49: erda.msp.apm.alert.CustomizeAlertDetail.notifies:type_name -> erda.msp.apm.alert.CustomizeAlertNotifyTemplates
	50,  // 50: erda.msp.apm.alert.CustomizeAlertDetail.lang:type_name -> erda.msp.apm.alert.LanguageCode
	47,  // 51: erda.msp.apm.alert.CustomizeAlertRule.functions:type_name -> erda.msp.apm.alert.CustomizeAlertRuleFunction
	48,  // 52: erda.msp.apm.alert.CustomizeAlertRule.filters:type_name -> erda.msp.apm.alert.CustomizeAlertRuleFilter
	88,  // 53: erda.msp.apm.alert.CustomizeAlertRule.select:type_name -> erda.msp.apm.alert.CustomizeAlertRule.SelectEntry
	89,  // 54: erda.msp.apm.alert.CustomizeAlertRule.attributes:type_name -> erda.msp.apm.alert.CustomizeAlertRule.AttributesEntry
	98,  // 55: erda.msp.apm.alert.CustomizeAlertRuleFunction.value:type_name -> google.protobuf.Any
	98,  // 56: erda.msp.apm.alert.CustomizeAlertRuleFilter.value:type_name -> google.protobuf.Any
	90,  // 57: erda.msp.apm.alert.CustomizeAlertNotifyTemplates.attributes:type_name -> erda.msp.apm.alert.CustomizeAlertNotifyTemplates.AttributesEntry
	45,  // 58: erda.msp.apm.alert.CreateCustomizeAlertRequest.alert:type_name -> erda.msp.apm.alert.CustomizeAlertDetail
	53,  // 59: erda.msp.apm.alert.CreateCustomizeAlertResponse.data:type_name -> erda.msp.apm.alert.CreateCustomizeAlertData
	45,  // 60: erda.msp.apm.alert.UpdateCustomizeAlertRequest.alert:type_name -> erda.msp.apm.alert.CustomizeAlertDetail
	60,  // 61: erda.msp.apm.alert.DeleteCustomizeAlertResponse.data:type_name -> erda.msp.apm.alert.DeleteCustomizeAlertData
	63,  // 62: erda.msp.apm.alert.GetAlertRecordAttrsResponse.data:type_name -> erda.msp.apm.alert.AlertRecordAttr
	3,   // 63: erda.msp.apm.alert.AlertRecordAttr.alertState:type_name -> erda.msp.apm.alert.DisplayKey
	3,   // 64: erda.msp.apm.alert.AlertRecordAttr.alertType:type_name -> erda.msp.apm.alert.DisplayKey
	3,   // 65: erda.msp.apm.alert.AlertRecordAttr.handleState:type_name -> erda.msp.apm.alert.DisplayKey
	66,  // 66: erda.msp.apm.alert.GetAlertRecordsResponse.data:type_name -> erda.msp.apm.alert.GetAlertRecordsData
	67,  // 67: erda.msp.apm.alert.GetAlertRecordsData.list:type_name -> erda.msp.apm.alert.AlertRecord
	67,  // 68: erda.msp.apm.alert.GetAlertRecordResponse.data:type_name -> erda.msp.apm.alert.AlertRecord
	72,  // 69: erda.msp.apm.alert.GetAlertHistoriesResponse.data:type_name -> erda.msp.apm.alert.AlertHistory
	91,  // 70: erda.msp.apm.alert.CreateAlertRecordIssueRequest.body:type_name -> erda.msp.apm.alert.CreateAlertRecordIssueRequest.BodyEntry
	92,  // 71: erda.msp.apm.alert.UpdateAlertRecordIssueRequest.body:type_name -> erda.msp.apm.alert.UpdateAlertRecordIssueRequest.BodyEntry
	45,  // 72: erda.msp.apm.alert.DashboardPreviewRequest.alert:type_name -> erda.msp.apm.alert.CustomizeAlertDetail
	79,  // 73: erda.msp.apm.alert.DashboardPreviewResponse.data:type_name -> erda.msp.apm.alert.View
	98,  // 74: erda.msp.apm.alert.View.staticData:type_name -> google.protobuf.Any
	80,  // 75: erda.msp.apm.alert.View.config:type_name -> erda.msp.apm.alert.Config
	81,  // 76: erda.msp.apm.alert.View.api:type_name -> erda.msp.apm.alert.API
	98,  // 77: erda.msp.apm.alert.View.controls:type_name -> google.protobuf.Any
	93,  // 78: erda.msp.apm.alert.Config.optionProps:type_name -> erda.msp.apm.alert.Config.OptionPropsEntry
	98,  // 79: erda.msp.apm.alert.Config.dataSourceConfig:type_name -> google.protobuf.Any
	98,  // 80: erda.msp.apm.alert.Config.option:type_name -> google.protobuf.Any
	94,  // 81: erda.msp.apm.alert.API.query:type_name -> erda.msp.apm.alert.API.QueryEntry
	95,  // 82: erda.msp.apm.alert.API.body:type_name -> erda.msp.apm.alert.API.BodyEntry
	96,  // 83: erda.msp.apm.alert.API.header:type_name -> erda.msp.apm.alert.API.HeaderEntry
	97,  // 84: erda.msp.apm.alert.API.extraData:type_name -> erda.msp.apm.alert.API.ExtraDataEntry
	98,  // 85: erda.msp.apm.alert.AlertRule.TemplateEntry.value:type_name -> google.protobuf.Any
	98,  // 86: erda.msp.apm.alert.AlertRule.AttributesEntry.value:type_name -> google.protobuf.Any
	98,  // 87: erda.msp.apm.alert.Alert.FiltersEntry.value:type_name -> google.protobuf.Any
	98,  // 88: erda.msp.apm.alert.Alert.AttributesEntry.value:type_name -> google.protobuf.Any
	98,  // 89: erda.msp.apm.alert.AlertExpression.AlertExpressionFunction.value:type_name -> google.protobuf.Any
	98,  // 90: erda.msp.apm.alert.CustomizeAlertDetail.AttributesEntry.value:type_name -> google.protobuf.Any
	98,  // 91: erda.msp.apm.alert.CustomizeAlertRule.AttributesEntry.value:type_name -> google.protobuf.Any
	98,  // 92: erda.msp.apm.alert.CustomizeAlertNotifyTemplates.AttributesEntry.value:type_name -> google.protobuf.Any
	98,  // 93: erda.msp.apm.alert.CreateAlertRecordIssueRequest.BodyEntry.value:type_name -> google.protobuf.Any
	98,  // 94: erda.msp.apm.alert.UpdateAlertRecordIssueRequest.BodyEntry.value:type_name -> google.protobuf.Any
	98,  // 95: erda.msp.apm.alert.Config.OptionPropsEntry.value:type_name -> google.protobuf.Any
	98,  // 96: erda.msp.apm.alert.API.QueryEntry.value:type_name -> google.protobuf.Any
	98,  // 97: erda.msp.apm.alert.API.BodyEntry.value:type_name -> google.protobuf.Any
	98,  // 98: erda.msp.apm.alert.API.HeaderEntry.value:type_name -> google.protobuf.Any
	98,  // 99: erda.msp.apm.alert.API.ExtraDataEntry.value:type_name -> google.protobuf.Any
	0,   // 100: erda.msp.apm.alert.AlertService.QueryAlertRule:input_type -> erda.msp.apm.alert.QueryAlertRuleRequest
	9,   // 101: erda.msp.apm.alert.AlertService.QueryAlert:input_type -> erda.msp.apm.alert.QueryAlertRequest
	19,  // 102: erda.msp.apm.alert.AlertService.GetAlert:input_type -> erda.msp.apm.alert.GetAlertRequest
	21,  // 103: erda.msp.apm.alert.AlertService.CreateAlert:input_type -> erda.msp.apm.alert.CreateAlertRequest
	24,  // 104: erda.msp.apm.alert.AlertService.UpdateAlert:input_type -> erda.msp.apm.alert.UpdateAlertRequest
	26,  // 105: erda.msp.apm.alert.AlertService.UpdateAlertEnable:input_type -> erda.msp.apm.alert.UpdateAlertEnableRequest
	28,  // 106: erda.msp.apm.alert.AlertService.DeleteAlert:input_type -> erda.msp.apm.alert.DeleteAlertRequest
	30,  // 107: erda.msp.apm.alert.AlertService.QueryCustomizeMetric:input_type -> erda.msp.apm.alert.QueryCustomizeMetricRequest
	36,  // 108: erda.msp.apm.alert.AlertService.QueryCustomizeNotifyTarget:input_type -> erda.msp.apm.alert.QueryCustomizeNotifyTargetRequest
	39,  // 109: erda.msp.apm.alert.AlertService.QueryCustomizeAlerts:input_type -> erda.msp.apm.alert.QueryCustomizeAlertsRequest
	43,  // 110: erda.msp.apm.alert.AlertService.GetCustomizeAlert:input_type -> erda.msp.apm.alert.GetCustomizeAlertRequest
	51,  // 111: erda.msp.apm.alert.AlertService.CreateCustomizeAlert:input_type -> erda.msp.apm.alert.CreateCustomizeAlertRequest
	54,  // 112: erda.msp.apm.alert.AlertService.UpdateCustomizeAlert:input_type -> erda.msp.apm.alert.UpdateCustomizeAlertRequest
	56,  // 113: erda.msp.apm.alert.AlertService.UpdateCustomizeAlertEnable:input_type -> erda.msp.apm.alert.UpdateCustomizeAlertEnableRequest
	58,  // 114: erda.msp.apm.alert.AlertService.DeleteCustomizeAlert:input_type -> erda.msp.apm.alert.DeleteCustomizeAlertRequest
	61,  // 115: erda.msp.apm.alert.AlertService.GetAlertRecordAttrs:input_type -> erda.msp.apm.alert.GetAlertRecordAttrsRequest
	64,  // 116: erda.msp.apm.alert.AlertService.GetAlertRecords:input_type -> erda.msp.apm.alert.GetAlertRecordsRequest
	68,  // 117: erda.msp.apm.alert.AlertService.GetAlertRecord:input_type -> erda.msp.apm.alert.GetAlertRecordRequest
	70,  // 118: erda.msp.apm.alert.AlertService.GetAlertHistories:input_type -> erda.msp.apm.alert.GetAlertHistoriesRequest
	73,  // 119: erda.msp.apm.alert.AlertService.CreateAlertRecordIssue:input_type -> erda.msp.apm.alert.CreateAlertRecordIssueRequest
	75,  // 120: erda.msp.apm.alert.AlertService.UpdateAlertRecordIssue:input_type -> erda.msp.apm.alert.UpdateAlertRecordIssueRequest
	77,  // 121: erda.msp.apm.alert.AlertService.DashboardPreview:input_type -> erda.msp.apm.alert.DashboardPreviewRequest
	1,   // 122: erda.msp.apm.alert.AlertService.QueryAlertRule:output_type -> erda.msp.apm.alert.QueryAlertRuleResponse
	10,  // 123: erda.msp.apm.alert.AlertService.QueryAlert:output_type -> erda.msp.apm.alert.QueryAlertResponse
	20,  // 124: erda.msp.apm.alert.AlertService.GetAlert:output_type -> erda.msp.apm.alert.GetAlertResponse
	22,  // 125: erda.msp.apm.alert.AlertService.CreateAlert:output_type -> erda.msp.apm.alert.CreateAlertResponse
	25,  // 126: erda.msp.apm.alert.AlertService.UpdateAlert:output_type -> erda.msp.apm.alert.UpdateAlertResponse
	27,  // 127: erda.msp.apm.alert.AlertService.UpdateAlertEnable:output_type -> erda.msp.apm.alert.UpdateAlertEnableResponse
	29,  // 128: erda.msp.apm.alert.AlertService.DeleteAlert:output_type -> erda.msp.apm.alert.DeleteAlertResponse
	31,  // 129: erda.msp.apm.alert.AlertService.QueryCustomizeMetric:output_type -> erda.msp.apm.alert.QueryCustomizeMetricResponse
	37,  // 130: erda.msp.apm.alert.AlertService.QueryCustomizeNotifyTarget:output_type -> erda.msp.apm.alert.QueryCustomizeNotifyTargetResponse
	40,  // 131: erda.msp.apm.alert.AlertService.QueryCustomizeAlerts:output_type -> erda.msp.apm.alert.QueryCustomizeAlertsResponse
	44,  // 132: erda.msp.apm.alert.AlertService.GetCustomizeAlert:output_type -> erda.msp.apm.alert.GetCustomizeAlertResponse
	52,  // 133: erda.msp.apm.alert.AlertService.CreateCustomizeAlert:output_type -> erda.msp.apm.alert.CreateCustomizeAlertResponse
	55,  // 134: erda.msp.apm.alert.AlertService.UpdateCustomizeAlert:output_type -> erda.msp.apm.alert.UpdateCustomizeAlertResponse
	57,  // 135: erda.msp.apm.alert.AlertService.UpdateCustomizeAlertEnable:output_type -> erda.msp.apm.alert.UpdateCustomizeAlertEnableResponse
	59,  // 136: erda.msp.apm.alert.AlertService.DeleteCustomizeAlert:output_type -> erda.msp.apm.alert.DeleteCustomizeAlertResponse
	62,  // 137: erda.msp.apm.alert.AlertService.GetAlertRecordAttrs:output_type -> erda.msp.apm.alert.GetAlertRecordAttrsResponse
	65,  // 138: erda.msp.apm.alert.AlertService.GetAlertRecords:output_type -> erda.msp.apm.alert.GetAlertRecordsResponse
	69,  // 139: erda.msp.apm.alert.AlertService.GetAlertRecord:output_type -> erda.msp.apm.alert.GetAlertRecordResponse
	71,  // 140: erda.msp.apm.alert.AlertService.GetAlertHistories:output_type -> erda.msp.apm.alert.GetAlertHistoriesResponse
	74,  // 141: erda.msp.apm.alert.AlertService.CreateAlertRecordIssue:output_type -> erda.msp.apm.alert.CreateAlertRecordIssueResponse
	76,  // 142: erda.msp.apm.alert.AlertService.UpdateAlertRecordIssue:output_type -> erda.msp.apm.alert.UpdateAlertRecordIssueResponse
	78,  // 143: erda.msp.apm.alert.AlertService.DashboardPreview:output_type -> erda.msp.apm.alert.DashboardPreviewResponse
	122, // [122:144] is the sub-list for method output_type
	100, // [100:122] is the sub-list for method input_type
	100, // [100:100] is the sub-list for extension type_name
	100, // [100:100] is the sub-list for extension extendee
	0,   // [0:100] is the sub-list for field type_name
}

func init() { file_alert_proto_init() }
func file_alert_proto_init() {
	if File_alert_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_alert_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryAlertRuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryAlertRuleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertTypeRuleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisplayKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertTypeRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertRuleFunction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Operator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifySilence); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryAlertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryAlertResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryAlertData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Alert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertExpression); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyTarget); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Target); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertNotifySilence); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAlertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAlertResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAlertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAlertResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAlertData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAlertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAlertResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAlertEnableRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAlertEnableResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAlertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAlertResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCustomizeMetricRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCustomizeMetricResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomizeMetricData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetricMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TagMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCustomizeNotifyTargetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCustomizeNotifyTargetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCustomizeNotifyTargetData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCustomizeAlertsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCustomizeAlertsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCustomizeAlertsData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomizeAlertOverview); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCustomizeAlertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCustomizeAlertResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomizeAlertDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomizeAlertRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomizeAlertRuleFunction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomizeAlertRuleFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomizeAlertNotifyTemplates); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LanguageCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCustomizeAlertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCustomizeAlertResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCustomizeAlertData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCustomizeAlertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCustomizeAlertResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCustomizeAlertEnableRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCustomizeAlertEnableResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCustomizeAlertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCustomizeAlertResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCustomizeAlertData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAlertRecordAttrsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAlertRecordAttrsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertRecordAttr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAlertRecordsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAlertRecordsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAlertRecordsData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAlertRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAlertRecordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAlertHistoriesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAlertHistoriesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAlertRecordIssueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAlertRecordIssueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAlertRecordIssueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAlertRecordIssueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DashboardPreviewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DashboardPreviewResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*View); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*API); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alert_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertExpression_AlertExpressionFunction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_alert_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   98,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_alert_proto_goTypes,
		DependencyIndexes: file_alert_proto_depIdxs,
		MessageInfos:      file_alert_proto_msgTypes,
	}.Build()
	File_alert_proto = out.File
	file_alert_proto_rawDesc = nil
	file_alert_proto_goTypes = nil
	file_alert_proto_depIdxs = nil
}
